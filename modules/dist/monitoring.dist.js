!function(I){var g={};function C(c){if(g[c])return g[c].exports;var i=g[c]={i:c,l:!1,exports:{}};return I[c].call(i.exports,i,i.exports,C),i.l=!0,i.exports}C.m=I,C.c=g,C.d=function(I,g,c){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:c})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var c=Object.create(null);if(C.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var i in I)C.d(c,i,function(g){return I[g]}.bind(null,i));return c},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=75)}({10:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.graphdecimal', []).filter('graphdecimal', ['$filter', function ($filter) {\n        return function (input, decimals) {\n            if (input) {\n                var lastValue = input.points.length > 0 ? input.points[input.points.length - 1] : 0;\n                input.displayValue = $filter(\"metricslargenumber\")(lastValue, decimals);\n            } else {\n                input = {\n                    points: [],\n                    average: 0,\n                    displayValue: 0\n                };\n            }\n\n            return input;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGRlY2ltYWwuanM/M2NjZiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwibW9kdWxlIiwiZmlsdGVyIiwiJGZpbHRlciIsImlucHV0IiwiZGVjaW1hbHMiLCJsYXN0VmFsdWUiLCJwb2ludHMiLCJsZW5ndGgiLCJkaXNwbGF5VmFsdWUiLCJhdmVyYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBQSxZQUFRQyxNQUFSLENBQWUsNEJBQWYsRUFBNkMsRUFBN0MsRUFDS0MsTUFETCxDQUNZLGNBRFosRUFDNEIsQ0FBQyxTQUFELEVBQVksVUFBVUMsT0FBVixFQUFtQjtBQUNuRCxlQUFPLFVBQVVDLEtBQVYsRUFBaUJDLFFBQWpCLEVBQTJCO0FBQzlCLGdCQUFJRCxLQUFKLEVBQVc7QUFDUCxvQkFBSUUsWUFBWUYsTUFBTUcsTUFBTixDQUFhQyxNQUFiLEdBQXNCLENBQXRCLEdBQTBCSixNQUFNRyxNQUFOLENBQWFILE1BQU1HLE1BQU4sQ0FBYUMsTUFBYixHQUFzQixDQUFuQyxDQUExQixHQUFrRSxDQUFsRjtBQUNBSixzQkFBTUssWUFBTixHQUFxQk4sUUFBUSxvQkFBUixFQUE4QkcsU0FBOUIsRUFBeUNELFFBQXpDLENBQXJCO0FBQ0gsYUFIRCxNQUdPO0FBQ0hELHdCQUFRO0FBQ0pHLDRCQUFRLEVBREo7QUFFSkcsNkJBQVMsQ0FGTDtBQUdKRCxrQ0FBYztBQUhWLGlCQUFSO0FBS0g7O0FBRUQsbUJBQU9MLEtBQVA7QUFDSCxTQWJEO0FBY0gsS0FmdUIsQ0FENUI7QUFpQkgsQ0FwQkEsRUFvQkNMLE1BcEJELEVBb0JTQSxPQUFPQyxPQXBCaEIsQ0FBRCIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3VpLnBhcnRpY3VsYXIuZ3JhcGhkZWNpbWFsJywgW10pXHJcbiAgICAgICAgLmZpbHRlcignZ3JhcGhkZWNpbWFsJywgWyckZmlsdGVyJywgZnVuY3Rpb24gKCRmaWx0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCwgZGVjaW1hbHMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsYXN0VmFsdWUgPSBpbnB1dC5wb2ludHMubGVuZ3RoID4gMCA/IGlucHV0LnBvaW50c1tpbnB1dC5wb2ludHMubGVuZ3RoIC0gMV0gOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0LmRpc3BsYXlWYWx1ZSA9ICRmaWx0ZXIoXCJtZXRyaWNzbGFyZ2VudW1iZXJcIikobGFzdFZhbHVlLCBkZWNpbWFscyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0ID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludHM6IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdmVyYWdlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5VmFsdWU6IDBcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dDtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n")},11:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.graphduration', []).filter('graphduration', ['formatter', function (formatter) {\n        return function (input) {\n            if (input) {\n                var lastValue = input.points.length > 0 ? input.points[input.points.length - 1] : 0;\n                input.displayValue = formatter.formatTime(lastValue);\n            }\n\n            return input;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGR1cmF0aW9uLmpzPzIzODgiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsImZpbHRlciIsImZvcm1hdHRlciIsImlucHV0IiwibGFzdFZhbHVlIiwicG9pbnRzIiwibGVuZ3RoIiwiZGlzcGxheVZhbHVlIiwiZm9ybWF0VGltZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQyxXQUFVQSxNQUFWLEVBQWtCQyxPQUFsQixFQUEyQjtBQUN4Qjs7QUFFQUEsWUFBUUMsTUFBUixDQUFlLDZCQUFmLEVBQThDLEVBQTlDLEVBQ0tDLE1BREwsQ0FDWSxlQURaLEVBQzZCLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDeEQsZUFBTyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3BCLGdCQUFJQSxLQUFKLEVBQVc7QUFDUCxvQkFBSUMsWUFBWUQsTUFBTUUsTUFBTixDQUFhQyxNQUFiLEdBQXNCLENBQXRCLEdBQTBCSCxNQUFNRSxNQUFOLENBQWFGLE1BQU1FLE1BQU4sQ0FBYUMsTUFBYixHQUFzQixDQUFuQyxDQUExQixHQUFrRSxDQUFsRjtBQUNBSCxzQkFBTUksWUFBTixHQUFxQkwsVUFBVU0sVUFBVixDQUFxQkosU0FBckIsQ0FBckI7QUFDSDs7QUFFRCxtQkFBT0QsS0FBUDtBQUNILFNBUEQ7QUFRSCxLQVR3QixDQUQ3QjtBQVdILENBZEEsRUFjQ0wsTUFkRCxFQWNTQSxPQUFPQyxPQWRoQixDQUFEIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgndWkucGFydGljdWxhci5ncmFwaGR1cmF0aW9uJywgW10pXHJcbiAgICAgICAgLmZpbHRlcignZ3JhcGhkdXJhdGlvbicsIFsnZm9ybWF0dGVyJywgZnVuY3Rpb24gKGZvcm1hdHRlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdFZhbHVlID0gaW5wdXQucG9pbnRzLmxlbmd0aCA+IDAgPyBpbnB1dC5wb2ludHNbaW5wdXQucG9pbnRzLmxlbmd0aCAtIDFdIDogMDtcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5kaXNwbGF5VmFsdWUgPSBmb3JtYXR0ZXIuZm9ybWF0VGltZShsYXN0VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBpbnB1dDtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n")},12:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.metricslargenumber', []).filter('metricslargenumber', ['formatter', function (formatter) {\n        return function (input, dec) {\n            var decimals = 0;\n            if (input < 10 || input > 1000000) {\n                decimals = 2;\n            }\n            return formatter.formatLargeNumber(input, dec || decimals);\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXRyaWNzbGFyZ2VudW1iZXIuanM/ZmI2NiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwibW9kdWxlIiwiZmlsdGVyIiwiZm9ybWF0dGVyIiwiaW5wdXQiLCJkZWMiLCJkZWNpbWFscyIsImZvcm1hdExhcmdlTnVtYmVyIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVNBLE1BQVQsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQzFCOztBQUVHQSxZQUFRQyxNQUFSLENBQWUsa0NBQWYsRUFBbUQsRUFBbkQsRUFDS0MsTUFETCxDQUNZLG9CQURaLEVBQ2tDLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDN0QsZUFBTyxVQUFVQyxLQUFWLEVBQWlCQyxHQUFqQixFQUFzQjtBQUN6QixnQkFBSUMsV0FBVyxDQUFmO0FBQ0EsZ0JBQUlGLFFBQVEsRUFBUixJQUFjQSxRQUFRLE9BQTFCLEVBQW1DO0FBQy9CRSwyQkFBVyxDQUFYO0FBQ0g7QUFDRCxtQkFBT0gsVUFBVUksaUJBQVYsQ0FBNEJILEtBQTVCLEVBQW1DQyxPQUFPQyxRQUExQyxDQUFQO0FBQ0gsU0FORDtBQU9ILEtBUjZCLENBRGxDO0FBVUgsQ0FiQSxFQWFDUCxNQWJELEVBYVNBLE9BQU9DLE9BYmhCLENBQUQiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24od2luZG93LCBhbmd1bGFyKSB7XHJcblx0J3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCd1aS5wYXJ0aWN1bGFyLm1ldHJpY3NsYXJnZW51bWJlcicsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ21ldHJpY3NsYXJnZW51bWJlcicsIFsnZm9ybWF0dGVyJywgZnVuY3Rpb24gKGZvcm1hdHRlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0LCBkZWMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBkZWNpbWFscyA9IDA7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQgPCAxMCB8fCBpbnB1dCA+IDEwMDAwMDApIHtcclxuICAgICAgICAgICAgICAgICAgICBkZWNpbWFscyA9IDI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdExhcmdlTnVtYmVyKGlucHV0LCBkZWMgfHwgZGVjaW1hbHMpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1dKTtcclxufSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///12\n")},6:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, $, Rx) {\n    'use strict';\n\n    function Service(toastService, connectionsManager, notifyService) {\n\n        var notifier = notifyService();\n        var mu = connectionsManager.getMonitoringUrl();\n        var isConnected = false;\n        var isConnecting = false;\n        var connectivitySource = new Rx.Subject();\n        var shouldShowFailedMessage = true;\n\n        function reportFailedConnection() {\n\n            if (isConnected) {\n                var message = 'Could not connect to the ServiceControl Monitoring service at ' + mu + '. <a class=\"btn btn-default\" href=\"#/configuration/connections\">View connection settings</a>';\n                console.log(message);\n                if (shouldShowFailedMessage) {\n                    toastService.showError(message);\n                    shouldShowFailedMessage = false;\n                }\n            }\n            isConnected = false;\n            isConnecting = false;\n            emitChange();\n        }\n\n        function reportSuccessfulConnection() {\n            if (!isConnected) {\n                var message = 'Connection to ServiceControl Monitoring service was successful ' + mu + '.';\n                console.log(message);\n                shouldShowFailedMessage = true;\n            }\n            isConnected = true;\n            isConnecting = false;\n            emitChange();\n        }\n\n        function reportConnecting() {\n            isConnecting = true;\n            emitChange();\n        }\n\n        function emitChange() {\n            var result = {\n                isConnected: isConnected,\n                isConnecting: isConnecting\n            };\n\n            connectivitySource.onNext(result);\n\n            notifier.notify('MonitoringConnectionStatusChanged', {\n                isMonitoringConnected: isConnected,\n                isMonitoringConnecting: isConnecting\n            });\n        }\n\n        function getConnectionStatusSource() {\n            return connectivitySource;\n        }\n\n        var service = {\n            reportConnecting: reportConnecting,\n            reportFailedConnection: reportFailedConnection,\n            reportSuccessfulConnection: reportSuccessfulConnection,\n            getConnectionStatusSource: getConnectionStatusSource\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['toastService', 'connectionsManager', 'notifyService'];\n\n    angular.module('services.connectivityNotifier', ['sc']).service('connectivityNotifier', Service);\n})(window, window.angular, window.jQuery, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyLmpzP2QyOGQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJSeCIsIlNlcnZpY2UiLCJ0b2FzdFNlcnZpY2UiLCJjb25uZWN0aW9uc01hbmFnZXIiLCJub3RpZnlTZXJ2aWNlIiwibm90aWZpZXIiLCJtdSIsImdldE1vbml0b3JpbmdVcmwiLCJpc0Nvbm5lY3RlZCIsImlzQ29ubmVjdGluZyIsImNvbm5lY3Rpdml0eVNvdXJjZSIsIlN1YmplY3QiLCJzaG91bGRTaG93RmFpbGVkTWVzc2FnZSIsInJlcG9ydEZhaWxlZENvbm5lY3Rpb24iLCJtZXNzYWdlIiwiY29uc29sZSIsImxvZyIsInNob3dFcnJvciIsImVtaXRDaGFuZ2UiLCJyZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbiIsInJlcG9ydENvbm5lY3RpbmciLCJyZXN1bHQiLCJvbk5leHQiLCJub3RpZnkiLCJpc01vbml0b3JpbmdDb25uZWN0ZWQiLCJpc01vbml0b3JpbmdDb25uZWN0aW5nIiwiZ2V0Q29ubmVjdGlvblN0YXR1c1NvdXJjZSIsInNlcnZpY2UiLCIkaW5qZWN0IiwibW9kdWxlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBLENBQUMsVUFBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLENBQTNCLEVBQThCQyxFQUE5QixFQUFrQztBQUMvQjs7QUFFQSxhQUFTQyxPQUFULENBQWlCQyxZQUFqQixFQUErQkMsa0JBQS9CLEVBQW1EQyxhQUFuRCxFQUFrRTs7QUFFOUQsWUFBSUMsV0FBV0QsZUFBZjtBQUNBLFlBQUlFLEtBQUtILG1CQUFtQkksZ0JBQW5CLEVBQVQ7QUFDQSxZQUFJQyxjQUFjLEtBQWxCO0FBQ0EsWUFBSUMsZUFBZSxLQUFuQjtBQUNBLFlBQUlDLHFCQUFxQixJQUFJVixHQUFHVyxPQUFQLEVBQXpCO0FBQ0EsWUFBSUMsMEJBQTBCLElBQTlCOztBQUVBLGlCQUFTQyxzQkFBVCxHQUFrQzs7QUFFOUIsZ0JBQUlMLFdBQUosRUFBaUI7QUFDYixvQkFBSU0sVUFBVSxtRUFBbUVSLEVBQW5FLEdBQXdFLDhGQUF0RjtBQUNBUyx3QkFBUUMsR0FBUixDQUFZRixPQUFaO0FBQ0Esb0JBQUlGLHVCQUFKLEVBQTZCO0FBQ3pCVixpQ0FBYWUsU0FBYixDQUF1QkgsT0FBdkI7QUFDQUYsOENBQTBCLEtBQTFCO0FBQ0g7QUFDSjtBQUNESiwwQkFBYyxLQUFkO0FBQ0FDLDJCQUFlLEtBQWY7QUFDQVM7QUFDSDs7QUFFRCxpQkFBU0MsMEJBQVQsR0FBc0M7QUFDbEMsZ0JBQUksQ0FBQ1gsV0FBTCxFQUFrQjtBQUNkLG9CQUFJTSxVQUFVLG9FQUFvRVIsRUFBcEUsR0FBeUUsR0FBdkY7QUFDQVMsd0JBQVFDLEdBQVIsQ0FBWUYsT0FBWjtBQUNBRiwwQ0FBMEIsSUFBMUI7QUFDSDtBQUNESiwwQkFBYyxJQUFkO0FBQ0FDLDJCQUFlLEtBQWY7QUFDQVM7QUFDSDs7QUFFRCxpQkFBU0UsZ0JBQVQsR0FBNEI7QUFDeEJYLDJCQUFlLElBQWY7QUFDQVM7QUFDSDs7QUFFRCxpQkFBU0EsVUFBVCxHQUFzQjtBQUNsQixnQkFBSUcsU0FBUztBQUNUYiw2QkFBYUEsV0FESjtBQUVUQyw4QkFBY0E7QUFGTCxhQUFiOztBQUtBQywrQkFBbUJZLE1BQW5CLENBQTBCRCxNQUExQjs7QUFFQWhCLHFCQUFTa0IsTUFBVCxDQUFnQixtQ0FBaEIsRUFBcUQ7QUFDakRDLHVDQUF3QmhCLFdBRHlCO0FBRWpEaUIsd0NBQXlCaEI7QUFGd0IsYUFBckQ7QUFJSDs7QUFFRCxpQkFBU2lCLHlCQUFULEdBQXFDO0FBQ2pDLG1CQUFPaEIsa0JBQVA7QUFDSDs7QUFFRCxZQUFJaUIsVUFBVTtBQUNWUCw4QkFBa0JBLGdCQURSO0FBRVZQLG9DQUF3QkEsc0JBRmQ7QUFHVk0sd0NBQTRCQSwwQkFIbEI7QUFJVk8sdUNBQTJCQTtBQUpqQixTQUFkOztBQVFBLGVBQU9DLE9BQVA7QUFDSDs7QUFFRDFCLFlBQVEyQixPQUFSLEdBQWtCLENBQUMsY0FBRCxFQUFpQixvQkFBakIsRUFBdUMsZUFBdkMsQ0FBbEI7O0FBRUE5QixZQUFRK0IsTUFBUixDQUFlLCtCQUFmLEVBQWdELENBQUMsSUFBRCxDQUFoRCxFQUNLRixPQURMLENBQ2Esc0JBRGIsRUFDcUMxQixPQURyQztBQUVILENBNUVELEVBNEVHSixNQTVFSCxFQTRFV0EsT0FBT0MsT0E1RWxCLEVBNEUyQkQsT0FBT2lDLE1BNUVsQyxFQTRFMENqQyxPQUFPRyxFQTVFakQiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCAkLCBSeCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGZ1bmN0aW9uIFNlcnZpY2UodG9hc3RTZXJ2aWNlLCBjb25uZWN0aW9uc01hbmFnZXIsIG5vdGlmeVNlcnZpY2UpIHtcclxuXHJcbiAgICAgICAgdmFyIG5vdGlmaWVyID0gbm90aWZ5U2VydmljZSgpO1xyXG4gICAgICAgIHZhciBtdSA9IGNvbm5lY3Rpb25zTWFuYWdlci5nZXRNb25pdG9yaW5nVXJsKCk7XHJcbiAgICAgICAgdmFyIGlzQ29ubmVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIGlzQ29ubmVjdGluZyA9IGZhbHNlO1xyXG4gICAgICAgIHZhciBjb25uZWN0aXZpdHlTb3VyY2UgPSBuZXcgUnguU3ViamVjdCgpO1xyXG4gICAgICAgIHZhciBzaG91bGRTaG93RmFpbGVkTWVzc2FnZSA9IHRydWU7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHJlcG9ydEZhaWxlZENvbm5lY3Rpb24oKSB7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNDb25uZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gJ0NvdWxkIG5vdCBjb25uZWN0IHRvIHRoZSBTZXJ2aWNlQ29udHJvbCBNb25pdG9yaW5nIHNlcnZpY2UgYXQgJyArIG11ICsgJy4gPGEgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIiBocmVmPVwiIy9jb25maWd1cmF0aW9uL2Nvbm5lY3Rpb25zXCI+VmlldyBjb25uZWN0aW9uIHNldHRpbmdzPC9hPic7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIGlmIChzaG91bGRTaG93RmFpbGVkTWVzc2FnZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvYXN0U2VydmljZS5zaG93RXJyb3IobWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvdWxkU2hvd0ZhaWxlZE1lc3NhZ2UgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpc0Nvbm5lY3RlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpc0Nvbm5lY3RpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgZW1pdENoYW5nZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcmVwb3J0U3VjY2Vzc2Z1bENvbm5lY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGlmICghaXNDb25uZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gJ0Nvbm5lY3Rpb24gdG8gU2VydmljZUNvbnRyb2wgTW9uaXRvcmluZyBzZXJ2aWNlIHdhcyBzdWNjZXNzZnVsICcgKyBtdSArICcuJztcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgc2hvdWxkU2hvd0ZhaWxlZE1lc3NhZ2UgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlzQ29ubmVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgaXNDb25uZWN0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGVtaXRDaGFuZ2UoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHJlcG9ydENvbm5lY3RpbmcoKSB7XHJcbiAgICAgICAgICAgIGlzQ29ubmVjdGluZyA9IHRydWU7XHJcbiAgICAgICAgICAgIGVtaXRDaGFuZ2UoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGVtaXRDaGFuZ2UoKSB7XHJcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSB7XHJcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogaXNDb25uZWN0ZWQsXHJcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3Rpbmc6IGlzQ29ubmVjdGluZ1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgY29ubmVjdGl2aXR5U291cmNlLm9uTmV4dChyZXN1bHQpO1xyXG5cclxuICAgICAgICAgICAgbm90aWZpZXIubm90aWZ5KCdNb25pdG9yaW5nQ29ubmVjdGlvblN0YXR1c0NoYW5nZWQnLCB7XHJcbiAgICAgICAgICAgICAgICBpc01vbml0b3JpbmdDb25uZWN0ZWQgOiBpc0Nvbm5lY3RlZCxcclxuICAgICAgICAgICAgICAgIGlzTW9uaXRvcmluZ0Nvbm5lY3RpbmcgOiBpc0Nvbm5lY3RpbmdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBnZXRDb25uZWN0aW9uU3RhdHVzU291cmNlKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gY29ubmVjdGl2aXR5U291cmNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHNlcnZpY2UgPSB7XHJcbiAgICAgICAgICAgIHJlcG9ydENvbm5lY3Rpbmc6IHJlcG9ydENvbm5lY3RpbmcsXHJcbiAgICAgICAgICAgIHJlcG9ydEZhaWxlZENvbm5lY3Rpb246IHJlcG9ydEZhaWxlZENvbm5lY3Rpb24sXHJcbiAgICAgICAgICAgIHJlcG9ydFN1Y2Nlc3NmdWxDb25uZWN0aW9uOiByZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbixcclxuICAgICAgICAgICAgZ2V0Q29ubmVjdGlvblN0YXR1c1NvdXJjZTogZ2V0Q29ubmVjdGlvblN0YXR1c1NvdXJjZSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICByZXR1cm4gc2VydmljZTtcclxuICAgIH1cclxuXHJcbiAgICBTZXJ2aWNlLiRpbmplY3QgPSBbJ3RvYXN0U2VydmljZScsICdjb25uZWN0aW9uc01hbmFnZXInLCAnbm90aWZ5U2VydmljZSddO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcy5jb25uZWN0aXZpdHlOb3RpZmllcicsIFsnc2MnXSlcclxuICAgICAgICAuc2VydmljZSgnY29ubmVjdGl2aXR5Tm90aWZpZXInLCBTZXJ2aWNlKTtcclxufSkod2luZG93LCB3aW5kb3cuYW5ndWxhciwgd2luZG93LmpRdWVyeSwgd2luZG93LlJ4KTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n")},7:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('monitored_endpoints').constant('largeGraphsMinimumYAxis', {\n        'queueLength': 10,\n        'throughputRetries': 10,\n        'processingCritical': 10\n    }).constant('smallGraphsMinimumYAxis', {\n        'queueLength': 10,\n        'throughput': 10,\n        'retries': 10,\n        'processingTime': 10,\n        'criticalTime': 10\n    });\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2NvbnN0YW50LmRpYWdyYW1zLmpzPzRiNWQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnN0YW50Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBQSxZQUFRQyxNQUFSLENBQWUscUJBQWYsRUFDS0MsUUFETCxDQUNjLHlCQURkLEVBQ3lDO0FBQzdCLHVCQUFlLEVBRGM7QUFFN0IsNkJBQXFCLEVBRlE7QUFHN0IsOEJBQXNCO0FBSE8sS0FEekMsRUFNS0EsUUFOTCxDQU1jLHlCQU5kLEVBTXlDO0FBQ2pDLHVCQUFlLEVBRGtCO0FBRWpDLHNCQUFjLEVBRm1CO0FBR2pDLG1CQUFXLEVBSHNCO0FBSWpDLDBCQUFrQixFQUplO0FBS2pDLHdCQUFnQjtBQUxpQixLQU56QztBQWNILENBakJBLEVBaUJDSCxNQWpCRCxFQWlCU0EsT0FBT0MsT0FqQmhCLENBQUQiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ21vbml0b3JlZF9lbmRwb2ludHMnKVxyXG4gICAgICAgIC5jb25zdGFudCgnbGFyZ2VHcmFwaHNNaW5pbXVtWUF4aXMnLCB7XHJcbiAgICAgICAgICAgICAgICAncXVldWVMZW5ndGgnOiAxMCxcclxuICAgICAgICAgICAgICAgICd0aHJvdWdocHV0UmV0cmllcyc6IDEwLFxyXG4gICAgICAgICAgICAgICAgJ3Byb2Nlc3NpbmdDcml0aWNhbCc6IDEwLFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIC5jb25zdGFudCgnc21hbGxHcmFwaHNNaW5pbXVtWUF4aXMnLCB7XHJcbiAgICAgICAgICAgICdxdWV1ZUxlbmd0aCc6IDEwLFxyXG4gICAgICAgICAgICAndGhyb3VnaHB1dCc6IDEwLFxyXG4gICAgICAgICAgICAncmV0cmllcyc6IDEwLFxyXG4gICAgICAgICAgICAncHJvY2Vzc2luZ1RpbWUnOiAxMCxcclxuICAgICAgICAgICAgJ2NyaXRpY2FsVGltZSc6IDEwLFxyXG4gICAgICAgIH0pO1xyXG5cclxufSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKSk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n")},75:function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(76);\n__webpack_require__(83);\n__webpack_require__(91);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL21vbml0b3JpbmcuanM/M2YyYSJdLCJuYW1lcyI6WyJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxtQkFBT0EsQ0FBQyxFQUFSO0FBQ0FBLG1CQUFPQSxDQUFDLEVBQVI7QUFDQUEsbUJBQU9BLENBQUMsRUFBUiIsImZpbGUiOiI3NS5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vanMvbW9uaXRvcmVkX2VuZHBvaW50cy5tb2R1bGUnKTtcclxucmVxdWlyZSgnLi9qcy9lbmRwb2ludF9kZXRhaWxzLm1vZHVsZScpO1xyXG5yZXF1aXJlKCcuL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmRpc2Nvbm5lY3RlZEVuZHBvaW50TW9uaXRvcicpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///75\n")},76:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('monitored_endpoints', []);\n\n    __webpack_require__(77);\n    __webpack_require__(6);\n    __webpack_require__(78);\n    __webpack_require__(79);\n    __webpack_require__(80);\n    __webpack_require__(7);\n\n    __webpack_require__(8);\n    __webpack_require__(9);\n    __webpack_require__(10);\n    __webpack_require__(11);\n    __webpack_require__(12);\n    __webpack_require__(82);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMubW9kdWxlLmpzPzIyNmEiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkI7QUFDeEI7O0FBQ0FBLFlBQVFDLE1BQVIsQ0FBZSxxQkFBZixFQUFzQyxFQUF0Qzs7QUFFQUMsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxDQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEVBQVI7QUFDQUEsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxFQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLENBQVI7O0FBRUFBLHVCQUFPQSxDQUFDLENBQVI7QUFDQUEsdUJBQU9BLENBQUMsQ0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxFQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEVBQVI7QUFDQUEsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxFQUFSO0FBRUgsQ0FsQkEsRUFrQkNILE1BbEJELEVBa0JTQSxPQUFPQyxPQWxCaEIsQ0FBRCIsImZpbGUiOiI3Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnbW9uaXRvcmVkX2VuZHBvaW50cycsIFtdKTtcclxuXHJcbiAgICByZXF1aXJlKCcuL3NlcnZpY2VzL3NlcnZpY2VzLm1vbml0b3JpbmcnKTtcclxuICAgIHJlcXVpcmUoJy4vc2VydmljZXMvc2VydmljZXMuY29ubmVjdGl2aXR5Tm90aWZpZXInKTtcclxuICAgIHJlcXVpcmUoJy4vc2VydmljZXMvc2VydmljZXMuZW5kcG9pbnRHcm91cGluZycpO1xyXG4gICAgcmVxdWlyZSgnLi9tb25pdG9yZWRfZW5kcG9pbnRzLmNvbnRyb2xsZXInKTtcclxuICAgIHJlcXVpcmUoJy4vbW9uaXRvcmVkX2VuZHBvaW50cy5yb3V0ZS5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9jb25zdGFudC5kaWFncmFtcy5qcycpO1xyXG5cclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1vbml0b3JpbmdDb25uZWN0aXZpdHlTdGF0dXMuanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGRlY2ltYWwuanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoZHVyYXRpb24uanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1ldHJpY3NsYXJnZW51bWJlci5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuc29ydGFibGVDb2x1bW4uanMnKTtcclxuICAgIFxyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///76\n")},77:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, $, Rx) {\n    'use strict';\n\n    function Service($http, rx, connectionsManager, uri, $q) {\n\n        var mu = connectionsManager.getMonitoringUrl();\n\n        function createEndpointsSource(historyPeriod, refreshInterval) {\n            return Rx.Observable.interval(refreshInterval).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(loadEndpointDataFromMonitoringService(historyPeriod));\n            }).selectMany(function (endpoints) {\n                return endpoints;\n            });\n        }\n\n        function loadEndpointDataFromMonitoringService(historyPeriod) {\n            return $http.get(uri.join(mu, 'monitored-endpoints') + '?history=' + historyPeriod).then(function (result) {\n                return result.data.length !== 0 ? result.data : [{ empty: true }];\n            }, function (error) {\n                return [{ error: error }];\n            });\n        }\n\n        function loadEndpointDetailsFromMonitoringService(endpointName, historyPeriod) {\n            return $http.get(uri.join(mu, 'monitored-endpoints', endpointName) + \"?history=\" + historyPeriod).then(function (result) {\n                filterOutSystemMessage(result.data);\n                return result.data;\n            }, function (error) {\n                return { error: error };\n            });\n        }\n\n        function filterOutSystemMessage(data) {\n            data.messageTypes = data.messageTypes.filter(function (mt) {\n                return mt.id;\n            });\n        }\n\n        function createEndpointDetailsSource(endpointName, historyPeriod, refreshInterval) {\n            return Rx.Observable.interval(refreshInterval).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(loadEndpointDetailsFromMonitoringService(endpointName, historyPeriod));\n            });\n        }\n\n        function getMonitoredEndpoints() {\n            return $http.get(uri.join(mu, 'monitored-endpoints') + '?history=1');\n        }\n\n        function removeEndpointInstance(endpointName, instanceId) {\n            return $http.delete(uri.join(mu, 'monitored-instance', endpointName, instanceId));\n        }\n\n        function getServiceControlMonitoringVersion() {\n            return $http.get(mu).then(function (response) {\n                return response.headers('X-Particular-Version');\n            });\n        }\n\n        function isRemovingEndpointEnabled() {\n            return $http({\n                method: 'OPTIONS',\n                url: mu\n            }).then(function (response) {\n                var headers = response.headers();\n\n                var allow = headers.allow;\n                var deleteAllowed = allow.indexOf('DELETE') >= 0;\n\n                return deleteAllowed;\n            }, function () {\n                return false;\n            });\n        }\n\n        function getDisconnectedCount() {\n            return $http.get(uri.join(mu, 'monitored-endpoints', 'disconnected'));\n        }\n\n        var service = {\n            createEndpointsSource: createEndpointsSource,\n            createEndpointDetailsSource: createEndpointDetailsSource,\n            getMonitoredEndpoints: getMonitoredEndpoints,\n            getServiceControlMonitoringVersion: getServiceControlMonitoringVersion,\n            removeEndpointInstance: removeEndpointInstance,\n            isRemovingEndpointEnabled: isRemovingEndpointEnabled,\n            getDisconnectedCount: getDisconnectedCount\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['$http', 'rx', 'connectionsManager', 'uri', '$q', 'toastService'];\n\n    angular.module('services.monitoringService', ['sc']).service('monitoringService', Service);\n})(window, window.angular, window.jQuery, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLm1vbml0b3JpbmcuanM/ZjQ2MyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwiJCIsIlJ4IiwiU2VydmljZSIsIiRodHRwIiwicngiLCJjb25uZWN0aW9uc01hbmFnZXIiLCJ1cmkiLCIkcSIsIm11IiwiZ2V0TW9uaXRvcmluZ1VybCIsImNyZWF0ZUVuZHBvaW50c1NvdXJjZSIsImhpc3RvcnlQZXJpb2QiLCJyZWZyZXNoSW50ZXJ2YWwiLCJPYnNlcnZhYmxlIiwiaW50ZXJ2YWwiLCJzdGFydFdpdGgiLCJmbGF0TWFwIiwiaSIsImZyb21Qcm9taXNlIiwibG9hZEVuZHBvaW50RGF0YUZyb21Nb25pdG9yaW5nU2VydmljZSIsInNlbGVjdE1hbnkiLCJlbmRwb2ludHMiLCJnZXQiLCJqb2luIiwidGhlbiIsInJlc3VsdCIsImRhdGEiLCJsZW5ndGgiLCJlbXB0eSIsImVycm9yIiwibG9hZEVuZHBvaW50RGV0YWlsc0Zyb21Nb25pdG9yaW5nU2VydmljZSIsImVuZHBvaW50TmFtZSIsImZpbHRlck91dFN5c3RlbU1lc3NhZ2UiLCJtZXNzYWdlVHlwZXMiLCJmaWx0ZXIiLCJtdCIsImlkIiwiY3JlYXRlRW5kcG9pbnREZXRhaWxzU291cmNlIiwiZ2V0TW9uaXRvcmVkRW5kcG9pbnRzIiwicmVtb3ZlRW5kcG9pbnRJbnN0YW5jZSIsImluc3RhbmNlSWQiLCJkZWxldGUiLCJnZXRTZXJ2aWNlQ29udHJvbE1vbml0b3JpbmdWZXJzaW9uIiwicmVzcG9uc2UiLCJoZWFkZXJzIiwiaXNSZW1vdmluZ0VuZHBvaW50RW5hYmxlZCIsIm1ldGhvZCIsInVybCIsImFsbG93IiwiZGVsZXRlQWxsb3dlZCIsImluZGV4T2YiLCJnZXREaXNjb25uZWN0ZWRDb3VudCIsInNlcnZpY2UiLCIkaW5qZWN0IiwibW9kdWxlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxDQUEzQixFQUE4QkMsRUFBOUIsRUFBa0M7QUFDL0I7O0FBRUEsYUFBU0MsT0FBVCxDQUFpQkMsS0FBakIsRUFBd0JDLEVBQXhCLEVBQTRCQyxrQkFBNUIsRUFBZ0RDLEdBQWhELEVBQXFEQyxFQUFyRCxFQUF5RDs7QUFFckQsWUFBSUMsS0FBS0gsbUJBQW1CSSxnQkFBbkIsRUFBVDs7QUFFQSxpQkFBU0MscUJBQVQsQ0FBK0JDLGFBQS9CLEVBQThDQyxlQUE5QyxFQUErRDtBQUMzRCxtQkFBT1gsR0FBR1ksVUFBSCxDQUFjQyxRQUFkLENBQXVCRixlQUF2QixFQUF3Q0csU0FBeEMsQ0FBa0QsQ0FBbEQsRUFDRkMsT0FERSxDQUNNLFVBQVVDLENBQVYsRUFBYTtBQUNsQix1QkFBT2hCLEdBQUdZLFVBQUgsQ0FBY0ssV0FBZCxDQUEwQkMsc0NBQXNDUixhQUF0QyxDQUExQixDQUFQO0FBQ0gsYUFIRSxFQUdBUyxVQUhBLENBR1csVUFBVUMsU0FBVixFQUFxQjtBQUMvQix1QkFBT0EsU0FBUDtBQUNILGFBTEUsQ0FBUDtBQU1IOztBQUVELGlCQUFTRixxQ0FBVCxDQUErQ1IsYUFBL0MsRUFBOEQ7QUFDMUQsbUJBQU9SLE1BQU1tQixHQUFOLENBQVVoQixJQUFJaUIsSUFBSixDQUFTZixFQUFULEVBQWEscUJBQWIsSUFBc0MsV0FBdEMsR0FBb0RHLGFBQTlELEVBQ0ZhLElBREUsQ0FDRyxVQUFVQyxNQUFWLEVBQWtCO0FBQ3BCLHVCQUFPQSxPQUFPQyxJQUFQLENBQVlDLE1BQVosS0FBdUIsQ0FBdkIsR0FDREYsT0FBT0MsSUFETixHQUVELENBQUMsRUFBRUUsT0FBTyxJQUFULEVBQUQsQ0FGTjtBQUdILGFBTEUsRUFNQyxVQUFDQyxLQUFELEVBQVc7QUFDUCx1QkFBTyxDQUFDLEVBQUVBLE9BQU9BLEtBQVQsRUFBRCxDQUFQO0FBQ0gsYUFSRixDQUFQO0FBVUg7O0FBRUQsaUJBQVNDLHdDQUFULENBQWtEQyxZQUFsRCxFQUFnRXBCLGFBQWhFLEVBQStFO0FBQzNFLG1CQUFPUixNQUFNbUIsR0FBTixDQUFVaEIsSUFBSWlCLElBQUosQ0FBU2YsRUFBVCxFQUFhLHFCQUFiLEVBQW9DdUIsWUFBcEMsSUFBb0QsV0FBcEQsR0FBa0VwQixhQUE1RSxFQUNGYSxJQURFLENBQ0csVUFBVUMsTUFBVixFQUFrQjtBQUNwQk8sdUNBQXVCUCxPQUFPQyxJQUE5QjtBQUNBLHVCQUFPRCxPQUFPQyxJQUFkO0FBQ0gsYUFKRSxFQUlBLFVBQVVHLEtBQVYsRUFBaUI7QUFDaEIsdUJBQU8sRUFBRUEsT0FBT0EsS0FBVCxFQUFQO0FBQ0gsYUFORSxDQUFQO0FBT0g7O0FBRUQsaUJBQVNHLHNCQUFULENBQWdDTixJQUFoQyxFQUFzQztBQUNsQ0EsaUJBQUtPLFlBQUwsR0FBb0JQLEtBQUtPLFlBQUwsQ0FBa0JDLE1BQWxCLENBQXlCLGNBQU07QUFDL0MsdUJBQU9DLEdBQUdDLEVBQVY7QUFDSCxhQUZtQixDQUFwQjtBQUdIOztBQUVELGlCQUFTQywyQkFBVCxDQUFxQ04sWUFBckMsRUFBbURwQixhQUFuRCxFQUFrRUMsZUFBbEUsRUFBbUY7QUFDL0UsbUJBQU9YLEdBQUdZLFVBQUgsQ0FBY0MsUUFBZCxDQUF1QkYsZUFBdkIsRUFBd0NHLFNBQXhDLENBQWtELENBQWxELEVBQ0ZDLE9BREUsQ0FDTSxVQUFVQyxDQUFWLEVBQWE7QUFDbEIsdUJBQU9oQixHQUFHWSxVQUFILENBQWNLLFdBQWQsQ0FBMEJZLHlDQUF5Q0MsWUFBekMsRUFBdURwQixhQUF2RCxDQUExQixDQUFQO0FBQ0gsYUFIRSxDQUFQO0FBSUg7O0FBRUQsaUJBQVMyQixxQkFBVCxHQUFpQztBQUM3QixtQkFBT25DLE1BQU1tQixHQUFOLENBQVVoQixJQUFJaUIsSUFBSixDQUFTZixFQUFULEVBQWEscUJBQWIsSUFBc0MsWUFBaEQsQ0FBUDtBQUNIOztBQUVELGlCQUFTK0Isc0JBQVQsQ0FBZ0NSLFlBQWhDLEVBQThDUyxVQUE5QyxFQUEwRDtBQUN0RCxtQkFBT3JDLE1BQU1zQyxNQUFOLENBQWFuQyxJQUFJaUIsSUFBSixDQUFTZixFQUFULEVBQWEsb0JBQWIsRUFBbUN1QixZQUFuQyxFQUFpRFMsVUFBakQsQ0FBYixDQUFQO0FBQ0g7O0FBRUQsaUJBQVNFLGtDQUFULEdBQThDO0FBQzFDLG1CQUFPdkMsTUFBTW1CLEdBQU4sQ0FBVWQsRUFBVixFQUFjZ0IsSUFBZCxDQUFtQixVQUFTbUIsUUFBVCxFQUFtQjtBQUN6Qyx1QkFBT0EsU0FBU0MsT0FBVCxDQUFpQixzQkFBakIsQ0FBUDtBQUNILGFBRk0sQ0FBUDtBQUdIOztBQUVELGlCQUFTQyx5QkFBVCxHQUFxQztBQUNqQyxtQkFBTzFDLE1BQU07QUFDVDJDLHdCQUFRLFNBREM7QUFFVEMscUJBQUt2QztBQUZJLGFBQU4sRUFHSmdCLElBSEksQ0FHQyxVQUFDbUIsUUFBRCxFQUFjO0FBQ2xCLG9CQUFNQyxVQUFVRCxTQUFTQyxPQUFULEVBQWhCOztBQUVBLG9CQUFNSSxRQUFRSixRQUFRSSxLQUF0QjtBQUNBLG9CQUFNQyxnQkFBZ0JELE1BQU1FLE9BQU4sQ0FBYyxRQUFkLEtBQTJCLENBQWpEOztBQUVBLHVCQUFPRCxhQUFQO0FBQ0gsYUFWTSxFQVVKLFlBQVc7QUFDVix1QkFBTyxLQUFQO0FBQ0gsYUFaTSxDQUFQO0FBYUg7O0FBRUYsaUJBQVNFLG9CQUFULEdBQWdDO0FBQzNCLG1CQUFPaEQsTUFBTW1CLEdBQU4sQ0FBVWhCLElBQUlpQixJQUFKLENBQVNmLEVBQVQsRUFBYSxxQkFBYixFQUFvQyxjQUFwQyxDQUFWLENBQVA7QUFDSDs7QUFFRCxZQUFJNEMsVUFBVTtBQUNWMUMsd0RBRFU7QUFFVjJCLG9FQUZVO0FBR1ZDLHdEQUhVO0FBSVZJLGtGQUpVO0FBS1ZILDBEQUxVO0FBTVZNLGdFQU5VO0FBT1ZNO0FBUFUsU0FBZDs7QUFVQSxlQUFPQyxPQUFQO0FBQ0g7O0FBRURsRCxZQUFRbUQsT0FBUixHQUFrQixDQUFDLE9BQUQsRUFBVSxJQUFWLEVBQWdCLG9CQUFoQixFQUFzQyxLQUF0QyxFQUE2QyxJQUE3QyxFQUFtRCxjQUFuRCxDQUFsQjs7QUFFQXRELFlBQVF1RCxNQUFSLENBQWUsNEJBQWYsRUFBNkMsQ0FBQyxJQUFELENBQTdDLEVBQ0tGLE9BREwsQ0FDYSxtQkFEYixFQUNrQ2xELE9BRGxDO0FBRUgsQ0F2R0EsRUF1R0NKLE1BdkdELEVBdUdTQSxPQUFPQyxPQXZHaEIsRUF1R3lCRCxPQUFPeUQsTUF2R2hDLEVBdUd3Q3pELE9BQU9HLEVBdkcvQyxDQUFEIiwiZmlsZSI6Ijc3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIsICQsIFJ4KSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gU2VydmljZSgkaHR0cCwgcngsIGNvbm5lY3Rpb25zTWFuYWdlciwgdXJpLCAkcSkge1xyXG5cclxuICAgICAgICB2YXIgbXUgPSBjb25uZWN0aW9uc01hbmFnZXIuZ2V0TW9uaXRvcmluZ1VybCgpO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVFbmRwb2ludHNTb3VyY2UoaGlzdG9yeVBlcmlvZCwgcmVmcmVzaEludGVydmFsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBSeC5PYnNlcnZhYmxlLmludGVydmFsKHJlZnJlc2hJbnRlcnZhbCkuc3RhcnRXaXRoKDApXHJcbiAgICAgICAgICAgICAgICAuZmxhdE1hcChmdW5jdGlvbiAoaSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBSeC5PYnNlcnZhYmxlLmZyb21Qcm9taXNlKGxvYWRFbmRwb2ludERhdGFGcm9tTW9uaXRvcmluZ1NlcnZpY2UoaGlzdG9yeVBlcmlvZCkpO1xyXG4gICAgICAgICAgICAgICAgfSkuc2VsZWN0TWFueShmdW5jdGlvbiAoZW5kcG9pbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVuZHBvaW50cztcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gbG9hZEVuZHBvaW50RGF0YUZyb21Nb25pdG9yaW5nU2VydmljZShoaXN0b3J5UGVyaW9kKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQodXJpLmpvaW4obXUsICdtb25pdG9yZWQtZW5kcG9pbnRzJykgKyAnP2hpc3Rvcnk9JyArIGhpc3RvcnlQZXJpb2QpXHJcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhLmxlbmd0aCAhPT0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHJlc3VsdC5kYXRhXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogW3sgZW1wdHk6IHRydWUgfV07XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW3sgZXJyb3I6IGVycm9yIH1dO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBsb2FkRW5kcG9pbnREZXRhaWxzRnJvbU1vbml0b3JpbmdTZXJ2aWNlKGVuZHBvaW50TmFtZSwgaGlzdG9yeVBlcmlvZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KHVyaS5qb2luKG11LCAnbW9uaXRvcmVkLWVuZHBvaW50cycsIGVuZHBvaW50TmFtZSkgKyBcIj9oaXN0b3J5PVwiICsgaGlzdG9yeVBlcmlvZClcclxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXJPdXRTeXN0ZW1NZXNzYWdlKHJlc3VsdC5kYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGE7XHJcbiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBlcnJvcjogZXJyb3IgfTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZmlsdGVyT3V0U3lzdGVtTWVzc2FnZShkYXRhKSB7XHJcbiAgICAgICAgICAgIGRhdGEubWVzc2FnZVR5cGVzID0gZGF0YS5tZXNzYWdlVHlwZXMuZmlsdGVyKG10ID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBtdC5pZDtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVFbmRwb2ludERldGFpbHNTb3VyY2UoZW5kcG9pbnROYW1lLCBoaXN0b3J5UGVyaW9kLCByZWZyZXNoSW50ZXJ2YWwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFJ4Lk9ic2VydmFibGUuaW50ZXJ2YWwocmVmcmVzaEludGVydmFsKS5zdGFydFdpdGgoMClcclxuICAgICAgICAgICAgICAgIC5mbGF0TWFwKGZ1bmN0aW9uIChpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJ4Lk9ic2VydmFibGUuZnJvbVByb21pc2UobG9hZEVuZHBvaW50RGV0YWlsc0Zyb21Nb25pdG9yaW5nU2VydmljZShlbmRwb2ludE5hbWUsIGhpc3RvcnlQZXJpb2QpKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ2V0TW9uaXRvcmVkRW5kcG9pbnRzKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KHVyaS5qb2luKG11LCAnbW9uaXRvcmVkLWVuZHBvaW50cycpICsgJz9oaXN0b3J5PTEnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZUVuZHBvaW50SW5zdGFuY2UoZW5kcG9pbnROYW1lLCBpbnN0YW5jZUlkKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5kZWxldGUodXJpLmpvaW4obXUsICdtb25pdG9yZWQtaW5zdGFuY2UnLCBlbmRwb2ludE5hbWUsIGluc3RhbmNlSWQpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldFNlcnZpY2VDb250cm9sTW9uaXRvcmluZ1ZlcnNpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQobXUpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5oZWFkZXJzKCdYLVBhcnRpY3VsYXItVmVyc2lvbicpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGlzUmVtb3ZpbmdFbmRwb2ludEVuYWJsZWQoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkaHR0cCh7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdPUFRJT05TJyxcclxuICAgICAgICAgICAgICAgIHVybDogbXVcclxuICAgICAgICAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSByZXNwb25zZS5oZWFkZXJzKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgYWxsb3cgPSBoZWFkZXJzLmFsbG93O1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGVsZXRlQWxsb3dlZCA9IGFsbG93LmluZGV4T2YoJ0RFTEVURScpID49IDA7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUFsbG93ZWQ7XHJcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgZnVuY3Rpb24gZ2V0RGlzY29ubmVjdGVkQ291bnQoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQodXJpLmpvaW4obXUsICdtb25pdG9yZWQtZW5kcG9pbnRzJywgJ2Rpc2Nvbm5lY3RlZCcpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBzZXJ2aWNlID0ge1xyXG4gICAgICAgICAgICBjcmVhdGVFbmRwb2ludHNTb3VyY2UsXHJcbiAgICAgICAgICAgIGNyZWF0ZUVuZHBvaW50RGV0YWlsc1NvdXJjZSxcclxuICAgICAgICAgICAgZ2V0TW9uaXRvcmVkRW5kcG9pbnRzLFxyXG4gICAgICAgICAgICBnZXRTZXJ2aWNlQ29udHJvbE1vbml0b3JpbmdWZXJzaW9uLFxyXG4gICAgICAgICAgICByZW1vdmVFbmRwb2ludEluc3RhbmNlLFxyXG4gICAgICAgICAgICBpc1JlbW92aW5nRW5kcG9pbnRFbmFibGVkLFxyXG4gICAgICAgICAgICBnZXREaXNjb25uZWN0ZWRDb3VudFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlO1xyXG4gICAgfVxyXG5cclxuICAgIFNlcnZpY2UuJGluamVjdCA9IFsnJGh0dHAnLCAncngnLCAnY29ubmVjdGlvbnNNYW5hZ2VyJywgJ3VyaScsICckcScsICd0b2FzdFNlcnZpY2UnXTtcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnc2VydmljZXMubW9uaXRvcmluZ1NlcnZpY2UnLCBbJ3NjJ10pXHJcbiAgICAgICAgLnNlcnZpY2UoJ21vbml0b3JpbmdTZXJ2aWNlJywgU2VydmljZSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhciwgd2luZG93LmpRdWVyeSwgd2luZG93LlJ4KSk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///77\n")},78:function(module,exports,__webpack_require__){"use strict";eval('\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function (angular) {\n    "use strict";\n\n    function parseEndpoint(endpoint, maxGroupSegments) {\n\n        if (maxGroupSegments === 0) {\n            return {\n                groupName: "Ungrouped",\n                shortName: endpoint.name,\n                endpoint: endpoint\n            };\n        }\n\n        var segments = endpoint.name.split(".");\n        var groupSegments = segments.slice(0, maxGroupSegments);\n        var endpointSegments = segments.slice(maxGroupSegments);\n        if (endpointSegments.length === 0) {\n            // the endpoint\'s name is shorter than the group size\n            return parseEndpoint(endpoint, maxGroupSegments - 1);\n        }\n\n        return {\n            groupName: groupSegments.join("."),\n            shortName: endpointSegments.join("."),\n            endpoint: endpoint\n        };\n    }\n\n    angular.module("monitored_endpoints", []).factory("endpointGrouping", function () {\n        return {\n            findSegments: function findSegments(endpoints) {\n                return endpoints.reduce(function (acc, cur) {\n                    return Math.max(acc, cur.name.split(".").length - 1);\n                }, 0);\n            },\n            group: function group(endpoints, numberOfSegments) {\n                var groups = new Map();\n                endpoints.forEach(function (element) {\n                    var grouping = parseEndpoint(element, numberOfSegments);\n\n                    var resultGroup = groups.get(grouping.groupName);\n                    if (!resultGroup) {\n                        resultGroup = {\n                            group: grouping.groupName,\n                            endpoints: []\n                        };\n                        groups.set(grouping.groupName, resultGroup);\n                    }\n                    resultGroup.endpoints.push(grouping);\n                });\n                return [].concat(_toConsumableArray(groups.values()));\n            }\n        };\n    });\n})(window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmVuZHBvaW50R3JvdXBpbmcuanM/NGY0MSJdLCJuYW1lcyI6WyJhbmd1bGFyIiwicGFyc2VFbmRwb2ludCIsImVuZHBvaW50IiwibWF4R3JvdXBTZWdtZW50cyIsImdyb3VwTmFtZSIsInNob3J0TmFtZSIsIm5hbWUiLCJzZWdtZW50cyIsInNwbGl0IiwiZ3JvdXBTZWdtZW50cyIsInNsaWNlIiwiZW5kcG9pbnRTZWdtZW50cyIsImxlbmd0aCIsImpvaW4iLCJtb2R1bGUiLCJmYWN0b3J5IiwiZmluZFNlZ21lbnRzIiwiZW5kcG9pbnRzIiwicmVkdWNlIiwiYWNjIiwiY3VyIiwiTWF0aCIsIm1heCIsImdyb3VwIiwibnVtYmVyT2ZTZWdtZW50cyIsImdyb3VwcyIsIk1hcCIsImZvckVhY2giLCJlbGVtZW50IiwiZ3JvdXBpbmciLCJyZXN1bHRHcm91cCIsImdldCIsInNldCIsInB1c2giLCJ2YWx1ZXMiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxDQUFDLFVBQVVBLE9BQVYsRUFBbUI7QUFDaEI7O0FBRUEsYUFBU0MsYUFBVCxDQUF1QkMsUUFBdkIsRUFBaUNDLGdCQUFqQyxFQUFtRDs7QUFFL0MsWUFBSUEscUJBQXFCLENBQXpCLEVBQTRCO0FBQ3hCLG1CQUFPO0FBQ0hDLDJCQUFXLFdBRFI7QUFFSEMsMkJBQVdILFNBQVNJLElBRmpCO0FBR0hKLDBCQUFVQTtBQUhQLGFBQVA7QUFLSDs7QUFFRCxZQUFJSyxXQUFXTCxTQUFTSSxJQUFULENBQWNFLEtBQWQsQ0FBb0IsR0FBcEIsQ0FBZjtBQUNBLFlBQUlDLGdCQUFnQkYsU0FBU0csS0FBVCxDQUFlLENBQWYsRUFBa0JQLGdCQUFsQixDQUFwQjtBQUNBLFlBQUlRLG1CQUFtQkosU0FBU0csS0FBVCxDQUFlUCxnQkFBZixDQUF2QjtBQUNBLFlBQUlRLGlCQUFpQkMsTUFBakIsS0FBNEIsQ0FBaEMsRUFBbUM7QUFDL0I7QUFDQSxtQkFBT1gsY0FBY0MsUUFBZCxFQUF3QkMsbUJBQW1CLENBQTNDLENBQVA7QUFDSDs7QUFFRCxlQUFPO0FBQ0hDLHVCQUFXSyxjQUFjSSxJQUFkLENBQW1CLEdBQW5CLENBRFI7QUFFSFIsdUJBQVdNLGlCQUFpQkUsSUFBakIsQ0FBc0IsR0FBdEIsQ0FGUjtBQUdIWCxzQkFBVUE7QUFIUCxTQUFQO0FBS0g7O0FBRURGLFlBQVFjLE1BQVIsQ0FBZSxxQkFBZixFQUFzQyxFQUF0QyxFQUNLQyxPQURMLENBQ2Esa0JBRGIsRUFDaUMsWUFBVztBQUNwQyxlQUFPO0FBQ0hDLDBCQUFjLHNCQUFTQyxTQUFULEVBQW9CO0FBQzlCLHVCQUFPQSxVQUFVQyxNQUFWLENBQWlCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUN2QywyQkFBT0MsS0FBS0MsR0FBTCxDQUFTSCxHQUFULEVBQWNDLElBQUlkLElBQUosQ0FBU0UsS0FBVCxDQUFlLEdBQWYsRUFBb0JJLE1BQXBCLEdBQTZCLENBQTNDLENBQVA7QUFDSCxpQkFGTSxFQUVKLENBRkksQ0FBUDtBQUdILGFBTEU7QUFNSFcsbUJBQU8sZUFBVU4sU0FBVixFQUFxQk8sZ0JBQXJCLEVBQXVDO0FBQzFDLG9CQUFJQyxTQUFTLElBQUlDLEdBQUosRUFBYjtBQUNBVCwwQkFBVVUsT0FBVixDQUFrQixVQUFTQyxPQUFULEVBQWtCO0FBQ2hDLHdCQUFJQyxXQUFXNUIsY0FBYzJCLE9BQWQsRUFBdUJKLGdCQUF2QixDQUFmOztBQUVBLHdCQUFJTSxjQUFjTCxPQUFPTSxHQUFQLENBQVdGLFNBQVN6QixTQUFwQixDQUFsQjtBQUNBLHdCQUFJLENBQUMwQixXQUFMLEVBQWtCO0FBQ2RBLHNDQUFjO0FBQ1ZQLG1DQUFPTSxTQUFTekIsU0FETjtBQUVWYSx1Q0FBVztBQUZELHlCQUFkO0FBSUFRLCtCQUFPTyxHQUFQLENBQVdILFNBQVN6QixTQUFwQixFQUErQjBCLFdBQS9CO0FBQ0g7QUFDREEsZ0NBQVliLFNBQVosQ0FBc0JnQixJQUF0QixDQUEyQkosUUFBM0I7QUFDSCxpQkFaRDtBQWFBLG9EQUFXSixPQUFPUyxNQUFQLEVBQVg7QUFDSDtBQXRCRSxTQUFQO0FBd0JILEtBMUJMO0FBNkJILENBekRELEVBeURHQyxPQUFPbkMsT0F6RFYiLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKGFuZ3VsYXIpIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG5cclxuICAgIGZ1bmN0aW9uIHBhcnNlRW5kcG9pbnQoZW5kcG9pbnQsIG1heEdyb3VwU2VnbWVudHMpIHtcclxuXHJcbiAgICAgICAgaWYgKG1heEdyb3VwU2VnbWVudHMgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGdyb3VwTmFtZTogXCJVbmdyb3VwZWRcIixcclxuICAgICAgICAgICAgICAgIHNob3J0TmFtZTogZW5kcG9pbnQubmFtZSxcclxuICAgICAgICAgICAgICAgIGVuZHBvaW50OiBlbmRwb2ludFxyXG4gICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBzZWdtZW50cyA9IGVuZHBvaW50Lm5hbWUuc3BsaXQoXCIuXCIpO1xyXG4gICAgICAgIHZhciBncm91cFNlZ21lbnRzID0gc2VnbWVudHMuc2xpY2UoMCwgbWF4R3JvdXBTZWdtZW50cyk7XHJcbiAgICAgICAgdmFyIGVuZHBvaW50U2VnbWVudHMgPSBzZWdtZW50cy5zbGljZShtYXhHcm91cFNlZ21lbnRzKTtcclxuICAgICAgICBpZiAoZW5kcG9pbnRTZWdtZW50cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgLy8gdGhlIGVuZHBvaW50J3MgbmFtZSBpcyBzaG9ydGVyIHRoYW4gdGhlIGdyb3VwIHNpemVcclxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlRW5kcG9pbnQoZW5kcG9pbnQsIG1heEdyb3VwU2VnbWVudHMgLSAxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGdyb3VwTmFtZTogZ3JvdXBTZWdtZW50cy5qb2luKFwiLlwiKSxcclxuICAgICAgICAgICAgc2hvcnROYW1lOiBlbmRwb2ludFNlZ21lbnRzLmpvaW4oXCIuXCIpLFxyXG4gICAgICAgICAgICBlbmRwb2ludDogZW5kcG9pbnRcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKFwibW9uaXRvcmVkX2VuZHBvaW50c1wiLCBbXSlcclxuICAgICAgICAuZmFjdG9yeShcImVuZHBvaW50R3JvdXBpbmdcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBmaW5kU2VnbWVudHM6IGZ1bmN0aW9uKGVuZHBvaW50cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBlbmRwb2ludHMucmVkdWNlKGZ1bmN0aW9uKGFjYywgY3VyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLm1heChhY2MsIGN1ci5uYW1lLnNwbGl0KFwiLlwiKS5sZW5ndGggLSAxKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBncm91cDogZnVuY3Rpb24gKGVuZHBvaW50cywgbnVtYmVyT2ZTZWdtZW50cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBncm91cHMgPSBuZXcgTWFwKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5kcG9pbnRzLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZ3JvdXBpbmcgPSBwYXJzZUVuZHBvaW50KGVsZW1lbnQsIG51bWJlck9mU2VnbWVudHMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdEdyb3VwID0gZ3JvdXBzLmdldChncm91cGluZy5ncm91cE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdEdyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRHcm91cCA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBncm91cDogZ3JvdXBpbmcuZ3JvdXBOYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZHBvaW50czogW11cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyb3Vwcy5zZXQoZ3JvdXBpbmcuZ3JvdXBOYW1lLCByZXN1bHRHcm91cCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0R3JvdXAuZW5kcG9pbnRzLnB1c2goZ3JvdXBpbmcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbLi4uZ3JvdXBzLnZhbHVlcygpXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbn0pKHdpbmRvdy5hbmd1bGFyKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///78\n')},79:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, Rx) {\n    'use strict';\n\n    function controller($scope, $location, monitoringService, serviceControlService, historyPeriodsService, $filter, smallGraphsMinimumYAxis, connectivityNotifier, connectionsManager, endpointGrouping) {\n\n        var subscription, endpointsFromScSubscription;\n\n        $scope.periods = historyPeriodsService.getAllPeriods();\n        $scope.selectedPeriod = historyPeriodsService.getDefaultPeriod();\n        $scope.smallGraphsMinimumYAxis = smallGraphsMinimumYAxis;\n        $scope.endpoints = [];\n        $scope.filter = { name: $location.search().filter };\n        $scope.order = { prop: \"name\", expression: \"-name\" };\n        $scope.loading = true;\n        $scope.location = $location;\n        $scope.monitoringUrl = connectionsManager.getMonitoringUrl();\n        $scope.hasData = false; // TODO: UI toggles between 'no connectivity' and 'no data' but unknown how to set this via the monitoringService rx observable. \n        $scope.grouping = {\n            groupedEndpoints: [],\n            groupSegments: 0,\n            selectedGrouping: 0,\n            selectGroup: selectGroup\n        };\n\n        function selectGroup(groupSize) {\n            $scope.grouping.selectedGrouping = groupSize;\n            $scope.grouping.groupedEndpoints = endpointGrouping.group($scope.endpoints, groupSize);\n        }\n\n        $scope.$watchCollection(\"endpoints\", function () {\n            $scope.grouping.groupSegments = endpointGrouping.findSegments($scope.endpoints);\n            $scope.grouping.groupedEndpoints = endpointGrouping.group($scope.endpoints, $scope.grouping.selectedGrouping);\n        });\n\n        $scope.$watch(\"filter.name\", function (newVal) {\n            $location.search('filter', newVal);\n        });\n\n        $scope.selectPeriod = function (period) {\n            $scope.selectedPeriod = period;\n            historyPeriodsService.saveSelectedPeriod(period);\n            updateUI();\n        };\n\n        $scope.getDetailsUrl = function (endpoint) {\n            return '#/monitoring/endpoint/' + endpoint.name + '?historyPeriod=' + $scope.selectedPeriod.value;\n        };\n\n        $scope.totalThroughput = function () {\n            return Math.round($scope.endpoints.reduce(function (total, currentEndpoint) {\n                return total + currentEndpoint.metrics.throughput.average;\n            }, 0));\n        };\n\n        function fillDisplayValuesForEndpoint(endpoint) {\n\n            $filter('graphduration')(endpoint.metrics.processingTime);\n            $filter('graphduration')(endpoint.metrics.criticalTime);\n            $filter('graphdecimal')(endpoint.metrics.queueLength, 0);\n            $filter('graphdecimal')(endpoint.metrics.throughput, 2);\n            $filter('graphdecimal')(endpoint.metrics.retries, 2);\n        }\n\n        function mergeIn(destination, source) {\n            for (var propName in source) {\n                if (Object.prototype.hasOwnProperty.call(source, propName)) {\n                    destination[propName] = source[propName];\n                }\n            }\n        }\n\n        function updateUI() {\n            if (subscription) {\n                subscription.dispose();\n            }\n\n            if (endpointsFromScSubscription) {\n                endpointsFromScSubscription.dispose();\n            }\n\n            var selectedPeriod = $scope.selectedPeriod;\n\n            subscription = monitoringService.createEndpointsSource(selectedPeriod.value, selectedPeriod.refreshInterval).subscribe(function (endpoint) {\n\n                $scope.loading = false;\n                $scope.hasData = !endpoint.empty;\n                $scope.supportsEndpointCount = Object.prototype.hasOwnProperty.call(endpoint, 'connectedCount');\n\n                if (endpoint.empty) {\n                    return;\n                }\n\n                if (endpoint.error) {\n                    connectivityNotifier.reportFailedConnection();\n                    if ($scope.endpoints) {\n                        $scope.endpoints.forEach(function (item) {\n                            return item.isScMonitoringDisconnected = true;\n                        });\n                    }\n                } else {\n                    connectivityNotifier.reportSuccessfulConnection();\n                    var index = $scope.endpoints.findIndex(function (item) {\n                        return item.name === endpoint.name;\n                    });\n\n                    endpoint.isScMonitoringDisconnected = false;\n                    fillDisplayValuesForEndpoint(endpoint);\n                    if (index >= 0) {\n                        mergeIn($scope.endpoints[index], endpoint);\n                    } else {\n                        $scope.endpoints.push(endpoint);\n\n                        $scope.endpoints.sort(function (first, second) {\n                            if (first.name < second.name) {\n                                return -1;\n                            }\n\n                            if (first.name > second.name) {\n                                return 1;\n                            }\n\n                            return 0;\n                        });\n                    }\n                }\n\n                $scope.$apply();\n            });\n\n            endpointsFromScSubscription = Rx.Observable.interval(5000).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(serviceControlService.getExceptionGroups('Endpoint Name', ''));\n            }).selectMany(function (endpoints) {\n                return endpoints.data;\n            }).subscribe(function (endpoint) {\n                if (endpoint.operation_status === 'ArchiveCompleted') {\n                    return;\n                }\n                var index = $scope.endpoints.findIndex(function (item) {\n                    return item.name === endpoint.title;\n                });\n                if (index >= 0) {\n                    $scope.endpoints[index].serviceControlId = endpoint.id;\n                    $scope.endpoints[index].errorCount = endpoint.count;\n                } else {\n                    $scope.endpoints.push({ name: endpoint.title, errorCount: endpoint.count, serviceControlId: endpoint.id, isScMonitoringDisconnected: true });\n                }\n            });\n        }\n\n        updateUI();\n\n        $scope.$on(\"$destroy\", function handler() {\n            subscription.dispose();\n            endpointsFromScSubscription.dispose();\n        });\n    }\n\n    controller.$inject = ['$scope', '$location', 'monitoringService', 'serviceControlService', 'historyPeriodsService', '$filter', 'smallGraphsMinimumYAxis', 'connectivityNotifier', 'connectionsManager', 'endpointGrouping'];\n\n    angular.module('monitored_endpoints').controller('monitoredEndpointsCtrl', controller);\n})(window, window.angular, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///79\n")},8:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, $) {\n    'use strict';\n\n    function controller($scope, connectivityNotifier, monitoringService, $interval, connectionsManager) {\n        $scope.isSCMonitoringConnecting = connectionsManager.getIsMonitoringEnabled();\n\n        if ($scope.isSCMonitoringConnecting) {\n            connectivityNotifier.reportConnecting();\n        }\n\n        $scope.monitoringUrl = connectionsManager.getMonitoringUrl();\n        connectivityNotifier.getConnectionStatusSource().subscribe(function (value) {\n            $scope.isSCMonitoringConnected = value.isConnected;\n            $scope.isSCMonitoringConnecting = value.isConnecting;\n        });\n\n        var lastReport = undefined;\n        var scMonitoringConnectionPing = $interval(function () {\n            monitoringService.getMonitoredEndpoints().then(function (r) {\n                if (lastReport === 'success') {\n                    return;\n                }\n\n                connectivityNotifier.reportSuccessfulConnection();\n                lastReport = 'success';\n            }, function () {\n                if (lastReport === 'failed') {\n                    return;\n                }\n\n                connectivityNotifier.reportFailedConnection();\n                lastReport = 'failed';\n            });\n        }, 10000);\n\n        // Cancel interval on page changes\n        $scope.$on('$destroy', function () {\n            if (angular.isDefined(scMonitoringConnectionPing)) {\n                $interval.cancel(scMonitoringConnectionPing);\n                scMonitoringConnectionPing = undefined;\n            }\n        });\n    }\n\n    controller.$inject = ['$scope', 'connectivityNotifier', 'monitoringService', '$interval', 'connectionsManager'];\n\n    function directive() {\n        return {\n            scope: {},\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'modules/monitoring/js/directives/ui.particular.monitoringConnectivityStatus.tpl.html',\n            controller: controller,\n            link: function link(scope, element) {}\n        };\n    }\n\n    directive.$inject = [];\n\n    angular.module('ui.particular.monitoringConnectivityStatus', []).directive('monitoringConnectivityStatus', directive);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzLmpzPzg4YmQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiY29ubmVjdGl2aXR5Tm90aWZpZXIiLCJtb25pdG9yaW5nU2VydmljZSIsIiRpbnRlcnZhbCIsImNvbm5lY3Rpb25zTWFuYWdlciIsImlzU0NNb25pdG9yaW5nQ29ubmVjdGluZyIsImdldElzTW9uaXRvcmluZ0VuYWJsZWQiLCJyZXBvcnRDb25uZWN0aW5nIiwibW9uaXRvcmluZ1VybCIsImdldE1vbml0b3JpbmdVcmwiLCJnZXRDb25uZWN0aW9uU3RhdHVzU291cmNlIiwic3Vic2NyaWJlIiwiaXNTQ01vbml0b3JpbmdDb25uZWN0ZWQiLCJ2YWx1ZSIsImlzQ29ubmVjdGVkIiwiaXNDb25uZWN0aW5nIiwibGFzdFJlcG9ydCIsInVuZGVmaW5lZCIsInNjTW9uaXRvcmluZ0Nvbm5lY3Rpb25QaW5nIiwiZ2V0TW9uaXRvcmVkRW5kcG9pbnRzIiwidGhlbiIsInJlcG9ydFN1Y2Nlc3NmdWxDb25uZWN0aW9uIiwicmVwb3J0RmFpbGVkQ29ubmVjdGlvbiIsIiRvbiIsImlzRGVmaW5lZCIsImNhbmNlbCIsIiRpbmplY3QiLCJkaXJlY3RpdmUiLCJzY29wZSIsInJlc3RyaWN0IiwicmVwbGFjZSIsInRlbXBsYXRlVXJsIiwibGluayIsImVsZW1lbnQiLCJtb2R1bGUiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLENBQTNCLEVBQThCO0FBQzNCOztBQUVBLGFBQVNDLFVBQVQsQ0FBb0JDLE1BQXBCLEVBQTRCQyxvQkFBNUIsRUFBa0RDLGlCQUFsRCxFQUFxRUMsU0FBckUsRUFBZ0ZDLGtCQUFoRixFQUFvRztBQUNoR0osZUFBT0ssd0JBQVAsR0FBa0NELG1CQUFtQkUsc0JBQW5CLEVBQWxDOztBQUVBLFlBQUlOLE9BQU9LLHdCQUFYLEVBQXFDO0FBQ2pDSixpQ0FBcUJNLGdCQUFyQjtBQUNIOztBQUVEUCxlQUFPUSxhQUFQLEdBQXVCSixtQkFBbUJLLGdCQUFuQixFQUF2QjtBQUNBUiw2QkFBcUJTLHlCQUFyQixHQUFpREMsU0FBakQsQ0FBMkQsaUJBQVM7QUFDaEVYLG1CQUFPWSx1QkFBUCxHQUFpQ0MsTUFBTUMsV0FBdkM7QUFDQWQsbUJBQU9LLHdCQUFQLEdBQWtDUSxNQUFNRSxZQUF4QztBQUNILFNBSEQ7O0FBS0EsWUFBSUMsYUFBYUMsU0FBakI7QUFDQSxZQUFJQyw2QkFBNkJmLFVBQVUsWUFBWTtBQUNuREQsOEJBQWtCaUIscUJBQWxCLEdBQTBDQyxJQUExQyxDQUErQyxhQUFLO0FBQ2hELG9CQUFJSixlQUFlLFNBQW5CLEVBQThCO0FBQzFCO0FBQ0g7O0FBRURmLHFDQUFxQm9CLDBCQUFyQjtBQUNBTCw2QkFBYSxTQUFiO0FBQ0gsYUFQRCxFQU9HLFlBQU07QUFDTCxvQkFBSUEsZUFBZSxRQUFuQixFQUE2QjtBQUN6QjtBQUNIOztBQUVEZixxQ0FBcUJxQixzQkFBckI7QUFDQU4sNkJBQWEsUUFBYjtBQUNILGFBZEQ7QUFlSCxTQWhCZ0MsRUFnQjlCLEtBaEI4QixDQUFqQzs7QUFrQkE7QUFDQWhCLGVBQU91QixHQUFQLENBQVcsVUFBWCxFQUF1QixZQUFZO0FBQy9CLGdCQUFJMUIsUUFBUTJCLFNBQVIsQ0FBa0JOLDBCQUFsQixDQUFKLEVBQW1EO0FBQy9DZiwwQkFBVXNCLE1BQVYsQ0FBaUJQLDBCQUFqQjtBQUNBQSw2Q0FBNkJELFNBQTdCO0FBQ0g7QUFDSixTQUxEO0FBTUg7O0FBRURsQixlQUFXMkIsT0FBWCxHQUFxQixDQUFDLFFBQUQsRUFBVyxzQkFBWCxFQUFtQyxtQkFBbkMsRUFBd0QsV0FBeEQsRUFBcUUsb0JBQXJFLENBQXJCOztBQUVBLGFBQVNDLFNBQVQsR0FBcUI7QUFDakIsZUFBTztBQUNIQyxtQkFBTyxFQURKO0FBRUhDLHNCQUFVLEdBRlA7QUFHSEMscUJBQVMsSUFITjtBQUlIQyx5QkFBYSxzRkFKVjtBQUtIaEMsd0JBQVlBLFVBTFQ7QUFNSGlDLGtCQUFNLGNBQVVKLEtBQVYsRUFBaUJLLE9BQWpCLEVBQTBCLENBQUc7QUFOaEMsU0FBUDtBQVFIOztBQUVETixjQUFVRCxPQUFWLEdBQW9CLEVBQXBCOztBQUVBN0IsWUFDS3FDLE1BREwsQ0FDWSw0Q0FEWixFQUMwRCxFQUQxRCxFQUVLUCxTQUZMLENBRWUsOEJBRmYsRUFFK0NBLFNBRi9DO0FBSUgsQ0EvREEsRUErREMvQixNQS9ERCxFQStEU0EsT0FBT0MsT0EvRGhCLEVBK0R5QkQsT0FBT3VDLE1BL0RoQyxDQUFEIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgJCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGZ1bmN0aW9uIGNvbnRyb2xsZXIoJHNjb3BlLCBjb25uZWN0aXZpdHlOb3RpZmllciwgbW9uaXRvcmluZ1NlcnZpY2UsICRpbnRlcnZhbCwgY29ubmVjdGlvbnNNYW5hZ2VyKSB7XHJcbiAgICAgICAgJHNjb3BlLmlzU0NNb25pdG9yaW5nQ29ubmVjdGluZyA9IGNvbm5lY3Rpb25zTWFuYWdlci5nZXRJc01vbml0b3JpbmdFbmFibGVkKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKCRzY29wZS5pc1NDTW9uaXRvcmluZ0Nvbm5lY3RpbmcpIHtcclxuICAgICAgICAgICAgY29ubmVjdGl2aXR5Tm90aWZpZXIucmVwb3J0Q29ubmVjdGluZygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJHNjb3BlLm1vbml0b3JpbmdVcmwgPSBjb25uZWN0aW9uc01hbmFnZXIuZ2V0TW9uaXRvcmluZ1VybCgpO1xyXG4gICAgICAgIGNvbm5lY3Rpdml0eU5vdGlmaWVyLmdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2UoKS5zdWJzY3JpYmUodmFsdWUgPT4ge1xyXG4gICAgICAgICAgICAkc2NvcGUuaXNTQ01vbml0b3JpbmdDb25uZWN0ZWQgPSB2YWx1ZS5pc0Nvbm5lY3RlZDtcclxuICAgICAgICAgICAgJHNjb3BlLmlzU0NNb25pdG9yaW5nQ29ubmVjdGluZyA9IHZhbHVlLmlzQ29ubmVjdGluZztcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdmFyIGxhc3RSZXBvcnQgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdmFyIHNjTW9uaXRvcmluZ0Nvbm5lY3Rpb25QaW5nID0gJGludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbW9uaXRvcmluZ1NlcnZpY2UuZ2V0TW9uaXRvcmVkRW5kcG9pbnRzKCkudGhlbihyID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChsYXN0UmVwb3J0ID09PSAnc3VjY2VzcycpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgY29ubmVjdGl2aXR5Tm90aWZpZXIucmVwb3J0U3VjY2Vzc2Z1bENvbm5lY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgIGxhc3RSZXBvcnQgPSAnc3VjY2Vzcyc7XHJcbiAgICAgICAgICAgIH0sICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChsYXN0UmVwb3J0ID09PSAnZmFpbGVkJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBjb25uZWN0aXZpdHlOb3RpZmllci5yZXBvcnRGYWlsZWRDb25uZWN0aW9uKCk7XHJcbiAgICAgICAgICAgICAgICBsYXN0UmVwb3J0ID0gJ2ZhaWxlZCc7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sIDEwMDAwKTtcclxuXHJcbiAgICAgICAgLy8gQ2FuY2VsIGludGVydmFsIG9uIHBhZ2UgY2hhbmdlc1xyXG4gICAgICAgICRzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoYW5ndWxhci5pc0RlZmluZWQoc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcpKSB7XHJcbiAgICAgICAgICAgICAgICAkaW50ZXJ2YWwuY2FuY2VsKHNjTW9uaXRvcmluZ0Nvbm5lY3Rpb25QaW5nKTtcclxuICAgICAgICAgICAgICAgIHNjTW9uaXRvcmluZ0Nvbm5lY3Rpb25QaW5nID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCAnY29ubmVjdGl2aXR5Tm90aWZpZXInLCAnbW9uaXRvcmluZ1NlcnZpY2UnLCAnJGludGVydmFsJywgJ2Nvbm5lY3Rpb25zTWFuYWdlciddO1xyXG5cclxuICAgIGZ1bmN0aW9uIGRpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzY29wZToge30sXHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzLnRwbC5odG1sJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogY29udHJvbGxlcixcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50KSB7IH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGRpcmVjdGl2ZS4kaW5qZWN0ID0gW107XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3VpLnBhcnRpY3VsYXIubW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cycsIFtdKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ21vbml0b3JpbmdDb25uZWN0aXZpdHlTdGF0dXMnLCBkaXJlY3RpdmUpO1xyXG5cclxufSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyLCB3aW5kb3cualF1ZXJ5KSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n")},80:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function routeProvider($routeProvider) {\n        var template = __webpack_require__(81);\n\n        $routeProvider.when('/monitoring', {\n            data: {\n                pageTitle: 'Monitored Endpoints'\n            },\n            template: template,\n            controller: 'monitoredEndpointsCtrl',\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        });\n    }\n\n    routeProvider.$inject = ['$routeProvider'];\n\n    angular.module('monitored_endpoints').config(routeProvider);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMucm91dGUuanM/ZjRhNCJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwicm91dGVQcm92aWRlciIsIiRyb3V0ZVByb3ZpZGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwid2hlbiIsImRhdGEiLCJwYWdlVGl0bGUiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVsb2FkT25TZWFyY2giLCIkaW5qZWN0IiwibW9kdWxlIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBLGFBQVNDLGFBQVQsQ0FBdUJDLGNBQXZCLEVBQXVDO0FBQ25DLFlBQUlDLFdBQVdDLG1CQUFPQSxDQUFDLEVBQVIsQ0FBZjs7QUFFQUYsdUJBQWVHLElBQWYsQ0FBb0IsYUFBcEIsRUFBbUM7QUFDL0JDLGtCQUFNO0FBQ0ZDLDJCQUFXO0FBRFQsYUFEeUI7QUFJL0JKLHNCQUFVQSxRQUpxQjtBQUsvQkssd0JBQVksd0JBTG1CO0FBTS9CQywwQkFBYyxJQU5pQjtBQU8vQkMsNEJBQWdCO0FBUGUsU0FBbkM7QUFTSDs7QUFFRFQsa0JBQWNVLE9BQWQsR0FBd0IsQ0FDcEIsZ0JBRG9CLENBQXhCOztBQUlBWCxZQUFRWSxNQUFSLENBQWUscUJBQWYsRUFDS0MsTUFETCxDQUNZWixhQURaO0FBRUgsQ0F2QkEsRUF1QkVGLE1BdkJGLEVBdUJVQSxPQUFPQyxPQXZCakIsQ0FBRCIsImZpbGUiOiI4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gcm91dGVQcm92aWRlcigkcm91dGVQcm92aWRlcikge1xyXG4gICAgICAgIGxldCB0ZW1wbGF0ZSA9IHJlcXVpcmUoJy4vLi4vdmlld3MvbW9uaXRvcmVkX2VuZHBvaW50cy5odG1sJyk7XHJcblxyXG4gICAgICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9tb25pdG9yaW5nJywge1xyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBwYWdlVGl0bGU6ICdNb25pdG9yZWQgRW5kcG9pbnRzJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdtb25pdG9yZWRFbmRwb2ludHNDdHJsJyxcclxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgICAgICByZWxvYWRPblNlYXJjaDogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByb3V0ZVByb3ZpZGVyLiRpbmplY3QgPSBbXHJcbiAgICAgICAgJyRyb3V0ZVByb3ZpZGVyJ1xyXG4gICAgXTtcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnbW9uaXRvcmVkX2VuZHBvaW50cycpXHJcbiAgICAgICAgLmNvbmZpZyhyb3V0ZVByb3ZpZGVyKTtcclxufSAod2luZG93LCB3aW5kb3cuYW5ndWxhcikpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80\n")},81:function(module,exports){eval('module.exports = "<platform-trial-expired ng-if=isPlatformTrialExpired></platform-trial-expired> <platform-expired ng-if=isPlatformExpired></platform-expired> <upgrade-protection-expired ng-if=isInvalidDueToUpgradeProtectionExpired></upgrade-protection-expired> <div class=\\"container monitoring-view\\" ng-show=endpoints.length ng-if=\\"!isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\"> <div class=\\"row monitoring-head\\"> <div class=\\"col-xs-4 no-side-padding list-section\\"> <h1>Endpoints overview</h1> </div> <div class=\\"col-xs-8 no-side-padding toolbar-menus\\"> <div class=\\"filter-group filter-monitoring\\"> <ul class=\\"nav nav-pills period-selector\\"> <li role=presentation ng-repeat=\\"period in periods\\" ng-class=\\"(period.value == selectedPeriod.value ? \'active\' : \'notselected\')\\"> <a ng-click=selectPeriod(period) href=\\"#/monitoring?historyPeriod={{period.value}}\\" uib-tooltip={{period.refreshIntervalText}}.>{{period.text}}</a> </li> </ul> <div class=dropdown> <label class=control-label>Group by:</label> <button type=button class=\\"btn btn-default dropdown-toggle sp-btn-menu\\" id=dropdownMenu1 data-toggle=dropdown aria-haspopup=true aria-expanded=false uib-tooltip=\\"Endpoint grouping will take \'.\' in endpoint names to delimit segments. Grouping endpoints will disable list sorting.\\"> {{ grouping.selectedGrouping == 0 ? \'no grouping\' : (\'max. \' + grouping.selectedGrouping + \' segments\')}} <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dropdownMenu1> <li><a href=# ng-click=\\"grouping.selectGroup(0); $event.preventDefault();\\">no grouping</a></li> <li role=separator class=divider></li> <li ng-repeat=\\"x in [].constructor(grouping.groupSegments) track by $index\\"><a href=# ng-click=\\"grouping.selectGroup($index+1); $event.preventDefault();\\">max. {{$index+1}} segments</a></li> </ul> </div> <input type=text placeholder=\\"Filter by name...\\" class=\\"form-control-static filter-input\\" ng-model=filter.name /> </div> </div> </div> </div> <div class=container ng-if=\\"!isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\"> <ng-include src=\\"\'modules/monitoring/views/monitored_endpoints_list.html\'\\"></ng-include> <ng-include src=\\"\'modules/monitoring/views/monitored_endpoints_list_grouped.html\'\\"></ng-include> </div> ";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL3ZpZXdzL21vbml0b3JlZF9lbmRwb2ludHMuaHRtbD9hYmUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHU0QkFBdTRCLGNBQWMsaUJBQWlCLDRCQUE0QixJQUFJLGFBQWEsa1hBQWtYLHVHQUF1Ryw2SUFBNkkseUJBQXlCLGlNQUFpTSx5QkFBeUIsVUFBVSxVQUFVIiwiZmlsZSI6IjgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjxwbGF0Zm9ybS10cmlhbC1leHBpcmVkIG5nLWlmPWlzUGxhdGZvcm1UcmlhbEV4cGlyZWQ+PC9wbGF0Zm9ybS10cmlhbC1leHBpcmVkPiA8cGxhdGZvcm0tZXhwaXJlZCBuZy1pZj1pc1BsYXRmb3JtRXhwaXJlZD48L3BsYXRmb3JtLWV4cGlyZWQ+IDx1cGdyYWRlLXByb3RlY3Rpb24tZXhwaXJlZCBuZy1pZj1pc0ludmFsaWREdWVUb1VwZ3JhZGVQcm90ZWN0aW9uRXhwaXJlZD48L3VwZ3JhZGUtcHJvdGVjdGlvbi1leHBpcmVkPiA8ZGl2IGNsYXNzPVxcXCJjb250YWluZXIgbW9uaXRvcmluZy12aWV3XFxcIiBuZy1zaG93PWVuZHBvaW50cy5sZW5ndGggbmctaWY9XFxcIiFpc1BsYXRmb3JtVHJpYWxFeHBpcmVkICYmICFpc1BsYXRmb3JtRXhwaXJlZCAmJiAhaXNJbnZhbGlkRHVlVG9VcGdyYWRlUHJvdGVjdGlvbkV4cGlyZWRcXFwiPiA8ZGl2IGNsYXNzPVxcXCJyb3cgbW9uaXRvcmluZy1oZWFkXFxcIj4gPGRpdiBjbGFzcz1cXFwiY29sLXhzLTQgbm8tc2lkZS1wYWRkaW5nIGxpc3Qtc2VjdGlvblxcXCI+IDxoMT5FbmRwb2ludHMgb3ZlcnZpZXc8L2gxPiA8L2Rpdj4gPGRpdiBjbGFzcz1cXFwiY29sLXhzLTggbm8tc2lkZS1wYWRkaW5nIHRvb2xiYXItbWVudXNcXFwiPiA8ZGl2IGNsYXNzPVxcXCJmaWx0ZXItZ3JvdXAgZmlsdGVyLW1vbml0b3JpbmdcXFwiPiA8dWwgY2xhc3M9XFxcIm5hdiBuYXYtcGlsbHMgcGVyaW9kLXNlbGVjdG9yXFxcIj4gPGxpIHJvbGU9cHJlc2VudGF0aW9uIG5nLXJlcGVhdD1cXFwicGVyaW9kIGluIHBlcmlvZHNcXFwiIG5nLWNsYXNzPVxcXCIocGVyaW9kLnZhbHVlID09IHNlbGVjdGVkUGVyaW9kLnZhbHVlID8gJ2FjdGl2ZScgOiAnbm90c2VsZWN0ZWQnKVxcXCI+IDxhIG5nLWNsaWNrPXNlbGVjdFBlcmlvZChwZXJpb2QpIGhyZWY9XFxcIiMvbW9uaXRvcmluZz9oaXN0b3J5UGVyaW9kPXt7cGVyaW9kLnZhbHVlfX1cXFwiIHVpYi10b29sdGlwPXt7cGVyaW9kLnJlZnJlc2hJbnRlcnZhbFRleHR9fS4+e3twZXJpb2QudGV4dH19PC9hPiA8L2xpPiA8L3VsPiA8ZGl2IGNsYXNzPWRyb3Bkb3duPiA8bGFiZWwgY2xhc3M9Y29udHJvbC1sYWJlbD5Hcm91cCBieTo8L2xhYmVsPiA8YnV0dG9uIHR5cGU9YnV0dG9uIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgZHJvcGRvd24tdG9nZ2xlIHNwLWJ0bi1tZW51XFxcIiBpZD1kcm9wZG93bk1lbnUxIGRhdGEtdG9nZ2xlPWRyb3Bkb3duIGFyaWEtaGFzcG9wdXA9dHJ1ZSBhcmlhLWV4cGFuZGVkPWZhbHNlIHVpYi10b29sdGlwPVxcXCJFbmRwb2ludCBncm91cGluZyB3aWxsIHRha2UgJy4nIGluIGVuZHBvaW50IG5hbWVzIHRvIGRlbGltaXQgc2VnbWVudHMuIEdyb3VwaW5nIGVuZHBvaW50cyB3aWxsIGRpc2FibGUgbGlzdCBzb3J0aW5nLlxcXCI+IHt7IGdyb3VwaW5nLnNlbGVjdGVkR3JvdXBpbmcgPT0gMCA/ICdubyBncm91cGluZycgOiAoJ21heC4gJyArIGdyb3VwaW5nLnNlbGVjdGVkR3JvdXBpbmcgKyAnIHNlZ21lbnRzJyl9fSA8c3BhbiBjbGFzcz1jYXJldD48L3NwYW4+IDwvYnV0dG9uPiA8dWwgY2xhc3M9ZHJvcGRvd24tbWVudSBhcmlhLWxhYmVsbGVkYnk9ZHJvcGRvd25NZW51MT4gPGxpPjxhIGhyZWY9IyBuZy1jbGljaz1cXFwiZ3JvdXBpbmcuc2VsZWN0R3JvdXAoMCk7ICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xcXCI+bm8gZ3JvdXBpbmc8L2E+PC9saT4gPGxpIHJvbGU9c2VwYXJhdG9yIGNsYXNzPWRpdmlkZXI+PC9saT4gPGxpIG5nLXJlcGVhdD1cXFwieCBpbiBbXS5jb25zdHJ1Y3Rvcihncm91cGluZy5ncm91cFNlZ21lbnRzKSB0cmFjayBieSAkaW5kZXhcXFwiPjxhIGhyZWY9IyBuZy1jbGljaz1cXFwiZ3JvdXBpbmcuc2VsZWN0R3JvdXAoJGluZGV4KzEpOyAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcXFwiPm1heC4ge3skaW5kZXgrMX19IHNlZ21lbnRzPC9hPjwvbGk+IDwvdWw+IDwvZGl2PiA8aW5wdXQgdHlwZT10ZXh0IHBsYWNlaG9sZGVyPVxcXCJGaWx0ZXIgYnkgbmFtZS4uLlxcXCIgY2xhc3M9XFxcImZvcm0tY29udHJvbC1zdGF0aWMgZmlsdGVyLWlucHV0XFxcIiBuZy1tb2RlbD1maWx0ZXIubmFtZSAvPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1jb250YWluZXIgbmctaWY9XFxcIiFpc1BsYXRmb3JtVHJpYWxFeHBpcmVkICYmICFpc1BsYXRmb3JtRXhwaXJlZCAmJiAhaXNJbnZhbGlkRHVlVG9VcGdyYWRlUHJvdGVjdGlvbkV4cGlyZWRcXFwiPiA8bmctaW5jbHVkZSBzcmM9XFxcIidtb2R1bGVzL21vbml0b3Jpbmcvdmlld3MvbW9uaXRvcmVkX2VuZHBvaW50c19saXN0Lmh0bWwnXFxcIj48L25nLWluY2x1ZGU+IDxuZy1pbmNsdWRlIHNyYz1cXFwiJ21vZHVsZXMvbW9uaXRvcmluZy92aWV3cy9tb25pdG9yZWRfZW5kcG9pbnRzX2xpc3RfZ3JvdXBlZC5odG1sJ1xcXCI+PC9uZy1pbmNsdWRlPiA8L2Rpdj4gXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81\n')},82:function(module,exports,__webpack_require__){"use strict";eval('\n\n(function (angular) {\n    "use strict";\n\n    function controller($scope) {\n        var vm = this;\n        vm.toggleSort = toggleSort;\n        vm.$onInit = onInit; // attributes set by bindToController are only available during&after onInit\n\n        function updateStatus() {\n            var isActive = vm.ref.prop === vm.propertyName;\n            if (isActive) {\n\n                vm.sortIcon = vm.ref.expression.charAt(0) === "-" ? "sort-down" : "sort-up";\n            }\n            vm.isColumnActive = isActive;\n        }\n\n        function onInit() {\n            vm.isColumnActive = updateStatus();\n            $scope.$watch("vm.ref.expression", updateStatus);\n        }\n\n        function toggleSort() {\n            vm.ref.prop = vm.propertyName;\n            var defaultSortOrder = "-" + vm.propertyName;\n            if (vm.ref.expression === defaultSortOrder) {\n                //invert sort order\n                vm.ref.expression = "+" + vm.propertyName;\n            } else {\n                vm.ref.expression = defaultSortOrder;\n            }\n        }\n    }\n\n    controller.$inject = ["$scope"];\n\n    function directive() {\n        return {\n            scope: {\n                propertyName: "=property",\n                ref: "="\n            },\n            restrict: "E",\n            controller: controller,\n            controllerAs: "vm",\n            bindToController: true,\n            transclude: true,\n            templateUrl: "modules/monitoring/js/directives/ui.particular.sortableColumn.tpl.html"\n        };\n    }\n\n    angular.module("ui.particular.sortableColumn", []).directive("sortableColumn", directive).config(function ($logProvider) {\n        $logProvider.debugEnabled(true);\n    });\n})(window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5zb3J0YWJsZUNvbHVtbi5qcz84OGViIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwidm0iLCJ0b2dnbGVTb3J0IiwiJG9uSW5pdCIsIm9uSW5pdCIsInVwZGF0ZVN0YXR1cyIsImlzQWN0aXZlIiwicmVmIiwicHJvcCIsInByb3BlcnR5TmFtZSIsInNvcnRJY29uIiwiZXhwcmVzc2lvbiIsImNoYXJBdCIsImlzQ29sdW1uQWN0aXZlIiwiJHdhdGNoIiwiZGVmYXVsdFNvcnRPcmRlciIsIiRpbmplY3QiLCJkaXJlY3RpdmUiLCJzY29wZSIsInJlc3RyaWN0IiwiY29udHJvbGxlckFzIiwiYmluZFRvQ29udHJvbGxlciIsInRyYW5zY2x1ZGUiLCJ0ZW1wbGF0ZVVybCIsIm1vZHVsZSIsImNvbmZpZyIsIiRsb2dQcm92aWRlciIsImRlYnVnRW5hYmxlZCIsIndpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxDQUFDLFVBQVVBLE9BQVYsRUFBbUI7QUFDaEI7O0FBRUEsYUFBU0MsVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDeEIsWUFBSUMsS0FBSyxJQUFUO0FBQ0FBLFdBQUdDLFVBQUgsR0FBZ0JBLFVBQWhCO0FBQ0FELFdBQUdFLE9BQUgsR0FBYUMsTUFBYixDQUh3QixDQUdIOztBQUVyQixpQkFBU0MsWUFBVCxHQUF3QjtBQUNwQixnQkFBSUMsV0FBV0wsR0FBR00sR0FBSCxDQUFPQyxJQUFQLEtBQWdCUCxHQUFHUSxZQUFsQztBQUNBLGdCQUFJSCxRQUFKLEVBQWM7O0FBRVZMLG1CQUFHUyxRQUFILEdBQWNULEdBQUdNLEdBQUgsQ0FBT0ksVUFBUCxDQUFrQkMsTUFBbEIsQ0FBeUIsQ0FBekIsTUFBZ0MsR0FBaEMsR0FDUixXQURRLEdBRVIsU0FGTjtBQUdIO0FBQ0RYLGVBQUdZLGNBQUgsR0FBb0JQLFFBQXBCO0FBQ0g7O0FBRUQsaUJBQVNGLE1BQVQsR0FBa0I7QUFDZEgsZUFBR1ksY0FBSCxHQUFvQlIsY0FBcEI7QUFDQUwsbUJBQU9jLE1BQVAsQ0FBYyxtQkFBZCxFQUFtQ1QsWUFBbkM7QUFDSDs7QUFFRCxpQkFBU0gsVUFBVCxHQUFzQjtBQUNsQkQsZUFBR00sR0FBSCxDQUFPQyxJQUFQLEdBQWNQLEdBQUdRLFlBQWpCO0FBQ0EsZ0JBQUlNLHlCQUF1QmQsR0FBR1EsWUFBOUI7QUFDQSxnQkFBSVIsR0FBR00sR0FBSCxDQUFPSSxVQUFQLEtBQXNCSSxnQkFBMUIsRUFBNEM7QUFDeEM7QUFDQWQsbUJBQUdNLEdBQUgsQ0FBT0ksVUFBUCxTQUF3QlYsR0FBR1EsWUFBM0I7QUFDSCxhQUhELE1BR087QUFDSFIsbUJBQUdNLEdBQUgsQ0FBT0ksVUFBUCxHQUFvQkksZ0JBQXBCO0FBQ0g7QUFDSjtBQUNKOztBQUVEaEIsZUFBV2lCLE9BQVgsR0FBcUIsQ0FBQyxRQUFELENBQXJCOztBQUVBLGFBQVNDLFNBQVQsR0FBcUI7QUFDakIsZUFBTztBQUNIQyxtQkFBTztBQUNIVCw4QkFBYyxXQURYO0FBRUhGLHFCQUFLO0FBRkYsYUFESjtBQUtIWSxzQkFBVSxHQUxQO0FBTUhwQix3QkFBWUEsVUFOVDtBQU9IcUIsMEJBQWMsSUFQWDtBQVFIQyw4QkFBa0IsSUFSZjtBQVNIQyx3QkFBWSxJQVRUO0FBVUhDLHlCQUFhO0FBVlYsU0FBUDtBQVlIOztBQUVEekIsWUFDSzBCLE1BREwsQ0FDWSw4QkFEWixFQUM0QyxFQUQ1QyxFQUVLUCxTQUZMLENBRWUsZ0JBRmYsRUFFaUNBLFNBRmpDLEVBR0tRLE1BSEwsQ0FHWSxVQUFVQyxZQUFWLEVBQXdCO0FBQzVCQSxxQkFBYUMsWUFBYixDQUEwQixJQUExQjtBQUNILEtBTEw7QUFRSCxDQTdERCxFQTZER0MsT0FBTzlCLE9BN0RWIiwiZmlsZSI6IjgyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChhbmd1bGFyKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICBmdW5jdGlvbiBjb250cm9sbGVyKCRzY29wZSkge1xyXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgdm0udG9nZ2xlU29ydCA9IHRvZ2dsZVNvcnQ7XHJcbiAgICAgICAgdm0uJG9uSW5pdCA9IG9uSW5pdDsgLy8gYXR0cmlidXRlcyBzZXQgYnkgYmluZFRvQ29udHJvbGxlciBhcmUgb25seSBhdmFpbGFibGUgZHVyaW5nJmFmdGVyIG9uSW5pdFxyXG4gICAgICAgIFxyXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVN0YXR1cygpIHtcclxuICAgICAgICAgICAgdmFyIGlzQWN0aXZlID0gdm0ucmVmLnByb3AgPT09IHZtLnByb3BlcnR5TmFtZTtcclxuICAgICAgICAgICAgaWYgKGlzQWN0aXZlKSB7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHZtLnNvcnRJY29uID0gdm0ucmVmLmV4cHJlc3Npb24uY2hhckF0KDApID09PSBcIi1cIlxyXG4gICAgICAgICAgICAgICAgICAgID8gXCJzb3J0LWRvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIDogXCJzb3J0LXVwXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdm0uaXNDb2x1bW5BY3RpdmUgPSBpc0FjdGl2ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIG9uSW5pdCgpIHtcclxuICAgICAgICAgICAgdm0uaXNDb2x1bW5BY3RpdmUgPSB1cGRhdGVTdGF0dXMoKTtcclxuICAgICAgICAgICAgJHNjb3BlLiR3YXRjaChcInZtLnJlZi5leHByZXNzaW9uXCIsIHVwZGF0ZVN0YXR1cyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiB0b2dnbGVTb3J0KCkge1xyXG4gICAgICAgICAgICB2bS5yZWYucHJvcCA9IHZtLnByb3BlcnR5TmFtZTtcclxuICAgICAgICAgICAgdmFyIGRlZmF1bHRTb3J0T3JkZXIgPSBgLSR7dm0ucHJvcGVydHlOYW1lfWA7XHJcbiAgICAgICAgICAgIGlmICh2bS5yZWYuZXhwcmVzc2lvbiA9PT0gZGVmYXVsdFNvcnRPcmRlcikge1xyXG4gICAgICAgICAgICAgICAgLy9pbnZlcnQgc29ydCBvcmRlclxyXG4gICAgICAgICAgICAgICAgdm0ucmVmLmV4cHJlc3Npb24gPSBgKyR7dm0ucHJvcGVydHlOYW1lfWA7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2bS5yZWYuZXhwcmVzc2lvbiA9IGRlZmF1bHRTb3J0T3JkZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29udHJvbGxlci4kaW5qZWN0ID0gW1wiJHNjb3BlXCJdO1xyXG5cclxuICAgIGZ1bmN0aW9uIGRpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzY29wZToge1xyXG4gICAgICAgICAgICAgICAgcHJvcGVydHlOYW1lOiBcIj1wcm9wZXJ0eVwiLFxyXG4gICAgICAgICAgICAgICAgcmVmOiBcIj1cIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICByZXN0cmljdDogXCJFXCIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IGNvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogXCJ2bVwiLFxyXG4gICAgICAgICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxyXG4gICAgICAgICAgICB0cmFuc2NsdWRlOiB0cnVlLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCJtb2R1bGVzL21vbml0b3JpbmcvanMvZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLnNvcnRhYmxlQ29sdW1uLnRwbC5odG1sXCJcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoXCJ1aS5wYXJ0aWN1bGFyLnNvcnRhYmxlQ29sdW1uXCIsIFtdKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoXCJzb3J0YWJsZUNvbHVtblwiLCBkaXJlY3RpdmUpXHJcbiAgICAgICAgLmNvbmZpZyhmdW5jdGlvbiAoJGxvZ1Byb3ZpZGVyKSB7XHJcbiAgICAgICAgICAgICRsb2dQcm92aWRlci5kZWJ1Z0VuYWJsZWQodHJ1ZSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxufSkod2luZG93LmFuZ3VsYXIpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///82\n')},83:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('endpoint_details', []);\n\n    __webpack_require__(84);\n    __webpack_require__(6);\n    __webpack_require__(85);\n    __webpack_require__(86);\n    __webpack_require__(7);\n\n    __webpack_require__(8);\n    __webpack_require__(9);\n    __webpack_require__(10);\n    __webpack_require__(88);\n    __webpack_require__(11);\n    __webpack_require__(89);\n    __webpack_require__(12);\n    __webpack_require__(90);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMubW9kdWxlLmpzPzdlMGMiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBU0EsTUFBVCxFQUFpQkMsT0FBakIsRUFBMEI7QUFDdkI7O0FBRUFBLFlBQVFDLE1BQVIsQ0FBZSxrQkFBZixFQUFtQyxFQUFuQzs7QUFFQUMsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxDQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEVBQVI7QUFDQUEsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxDQUFSOztBQUVBQSx1QkFBT0EsQ0FBQyxDQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLENBQVI7QUFDQUEsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxFQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEVBQVI7QUFDQUEsdUJBQU9BLENBQUMsRUFBUjtBQUNBQSx1QkFBT0EsQ0FBQyxFQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEVBQVI7QUFDSCxDQW5CQSxFQW1CQ0gsTUFuQkQsRUFtQlNBLE9BQU9DLE9BbkJoQixDQUFEIiwiZmlsZSI6IjgzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKHdpbmRvdywgYW5ndWxhcikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdlbmRwb2ludF9kZXRhaWxzJywgW10pO1xyXG5cclxuICAgIHJlcXVpcmUoJy4vc2VydmljZXMvc2VydmljZXMubWVzc2FnZVR5cGVQYXJzZXInKTtcclxuICAgIHJlcXVpcmUoJy4vc2VydmljZXMvc2VydmljZXMuY29ubmVjdGl2aXR5Tm90aWZpZXInKTtcclxuICAgIHJlcXVpcmUoJy4vZW5kcG9pbnRfZGV0YWlscy5jb250cm9sbGVyJyk7XHJcbiAgICByZXF1aXJlKCcuL2VuZHBvaW50X2RldGFpbHMucm91dGUuanMnKTtcclxuICAgIHJlcXVpcmUoJy4vY29uc3RhbnQuZGlhZ3JhbXMuanMnKTtcclxuXHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaC5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkZWNpbWFsLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5kdXJhdGlvbi5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbi5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubGFyZ2VHcmFwaC5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubWV0cmljc2xhcmdlbnVtYmVyLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXNzYWdlVHlwZXNDaGFuZ2VJbmRpY2F0b3IuanMnKTtcclxufSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///83\n")},84:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, $) {\n    'use strict';\n\n    function Service() {\n\n        function parseTheMessageTypeData(messageType) {\n            if (!messageType.typeName) return;\n\n            if (messageType.typeName.indexOf(';') > 0) {\n                var messageTypeHierarchy = messageType.typeName.split(';');\n                messageTypeHierarchy = messageTypeHierarchy.map(function (item) {\n                    var obj = {};\n                    var segments = item.split(',');\n                    obj.typeName = segments[0];\n                    obj.assemblyName = segments[1];\n                    obj.assemblyVersion = segments[2].substring(segments[2].indexOf('=') + 1);\n\n                    if (!segments[4].endsWith('=null')) {\n                        //SC monitoring fills culture only if PublicKeyToken is filled\n                        obj.culture = segments[3];\n                        obj.publicKeyToken = segments[4];\n                    }\n                    return obj;\n                });\n                messageType.messageTypeHierarchy = messageTypeHierarchy;\n                messageType.typeName = messageTypeHierarchy.map(function (item) {\n                    return item.typeName;\n                }).join(\", \");\n                messageType.shortName = messageTypeHierarchy.map(function (item) {\n                    return shortenTypeName(item.typeName);\n                }).join(\", \");\n                messageType.containsTypeHierarchy = true;\n                messageType.tooltipText = messageTypeHierarchy.reduce(function (sum, item) {\n                    return (sum ? sum + '<br> ' : '') + (item.typeName + ' |' + item.assemblyName + '-' + item.assemblyVersion) + (item.culture ? ' |' + item.culture : '') + (item.publicKeyToken ? ' |' + item.publicKeyToken : '');\n                }, '');\n            } else {\n                //Get the name without the namespace\n                messageType.shortName = shortenTypeName(messageType.typeName);\n\n                var tooltip = messageType.typeName + ' | ' + messageType.assemblyName + '-' + messageType.assemblyVersion;\n                if (messageType.culture && messageType.culture != 'null') {\n                    tooltip += ' | Culture=' + messageType.culture;\n                }\n\n                if (messageType.publicKeyToken && messageType.publicKeyToken != 'null') {\n                    tooltip += ' | PublicKeyToken=' + messageType.publicKeyToken;\n                }\n\n                messageType.tooltipText = tooltip;\n            }\n        }\n\n        function shortenTypeName(typeName) {\n            return typeName.split('.').pop();\n        }\n\n        var service = {\n            parseTheMessageTypeData: parseTheMessageTypeData\n        };\n\n        return service;\n    }\n\n    Service.$inject = [];\n\n    angular.module('services.messageTypeParser', ['sc']).service('messageTypeParser', Service);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLm1lc3NhZ2VUeXBlUGFyc2VyLmpzPzQwNGYiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJTZXJ2aWNlIiwicGFyc2VUaGVNZXNzYWdlVHlwZURhdGEiLCJtZXNzYWdlVHlwZSIsInR5cGVOYW1lIiwiaW5kZXhPZiIsIm1lc3NhZ2VUeXBlSGllcmFyY2h5Iiwic3BsaXQiLCJtYXAiLCJpdGVtIiwib2JqIiwic2VnbWVudHMiLCJhc3NlbWJseU5hbWUiLCJhc3NlbWJseVZlcnNpb24iLCJzdWJzdHJpbmciLCJlbmRzV2l0aCIsImN1bHR1cmUiLCJwdWJsaWNLZXlUb2tlbiIsImpvaW4iLCJzaG9ydE5hbWUiLCJzaG9ydGVuVHlwZU5hbWUiLCJjb250YWluc1R5cGVIaWVyYXJjaHkiLCJ0b29sdGlwVGV4dCIsInJlZHVjZSIsInN1bSIsInRvb2x0aXAiLCJwb3AiLCJzZXJ2aWNlIiwiJGluamVjdCIsIm1vZHVsZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQyxXQUFVQSxNQUFWLEVBQWtCQyxPQUFsQixFQUEyQkMsQ0FBM0IsRUFBOEI7QUFDM0I7O0FBRUEsYUFBU0MsT0FBVCxHQUFtQjs7QUFFZixpQkFBU0MsdUJBQVQsQ0FBaUNDLFdBQWpDLEVBQThDO0FBQzFDLGdCQUFJLENBQUNBLFlBQVlDLFFBQWpCLEVBQ0k7O0FBRUosZ0JBQUlELFlBQVlDLFFBQVosQ0FBcUJDLE9BQXJCLENBQTZCLEdBQTdCLElBQW9DLENBQXhDLEVBQTJDO0FBQ3ZDLG9CQUFJQyx1QkFBdUJILFlBQVlDLFFBQVosQ0FBcUJHLEtBQXJCLENBQTJCLEdBQTNCLENBQTNCO0FBQ0FELHVDQUF1QkEscUJBQXFCRSxHQUFyQixDQUF5QixVQUFDQyxJQUFELEVBQVU7QUFDdEQsd0JBQUlDLE1BQU0sRUFBVjtBQUNBLHdCQUFJQyxXQUFXRixLQUFLRixLQUFMLENBQVcsR0FBWCxDQUFmO0FBQ0FHLHdCQUFJTixRQUFKLEdBQWVPLFNBQVMsQ0FBVCxDQUFmO0FBQ0FELHdCQUFJRSxZQUFKLEdBQW1CRCxTQUFTLENBQVQsQ0FBbkI7QUFDQUQsd0JBQUlHLGVBQUosR0FBc0JGLFNBQVMsQ0FBVCxFQUFZRyxTQUFaLENBQXNCSCxTQUFTLENBQVQsRUFBWU4sT0FBWixDQUFvQixHQUFwQixJQUEyQixDQUFqRCxDQUF0Qjs7QUFFQSx3QkFBSSxDQUFDTSxTQUFTLENBQVQsRUFBWUksUUFBWixDQUFxQixPQUFyQixDQUFMLEVBQW9DO0FBQUU7QUFDbENMLDRCQUFJTSxPQUFKLEdBQWNMLFNBQVMsQ0FBVCxDQUFkO0FBQ0FELDRCQUFJTyxjQUFKLEdBQXFCTixTQUFTLENBQVQsQ0FBckI7QUFDSDtBQUNELDJCQUFPRCxHQUFQO0FBQ0gsaUJBWnNCLENBQXZCO0FBYUFQLDRCQUFZRyxvQkFBWixHQUFtQ0Esb0JBQW5DO0FBQ0FILDRCQUFZQyxRQUFaLEdBQ0lFLHFCQUFxQkUsR0FBckIsQ0FBeUI7QUFBQSwyQkFBUUMsS0FBS0wsUUFBYjtBQUFBLGlCQUF6QixFQUFnRGMsSUFBaEQsQ0FBcUQsSUFBckQsQ0FESjtBQUVBZiw0QkFBWWdCLFNBQVosR0FBd0JiLHFCQUFxQkUsR0FBckIsQ0FBeUI7QUFBQSwyQkFBUVksZ0JBQWdCWCxLQUFLTCxRQUFyQixDQUFSO0FBQUEsaUJBQXpCLEVBQWlFYyxJQUFqRSxDQUFzRSxJQUF0RSxDQUF4QjtBQUNBZiw0QkFBWWtCLHFCQUFaLEdBQW9DLElBQXBDO0FBQ0FsQiw0QkFBWW1CLFdBQVosR0FBMEJoQixxQkFBcUJpQixNQUFyQixDQUE0QixVQUFDQyxHQUFELEVBQU1mLElBQU47QUFBQSwyQkFBZSxDQUFDZSxNQUFTQSxHQUFULGFBQXNCLEVBQXZCLEtBQzlEZixLQUFLTCxRQUR5RCxVQUM1Q0ssS0FBS0csWUFEdUMsU0FDdkJILEtBQUtJLGVBRGtCLEtBQ0dKLEtBQUtPLE9BQUwsVUFBb0JQLEtBQUtPLE9BQXpCLEdBQXFDLEVBRHhDLEtBQytDUCxLQUFLUSxjQUFMLFVBQTJCUixLQUFLUSxjQUFoQyxHQUFtRCxFQURsRyxDQUFmO0FBQUEsaUJBQTVCLEVBRXRCLEVBRnNCLENBQTFCO0FBR0gsYUF2QkQsTUF1Qk87QUFDSDtBQUNBZCw0QkFBWWdCLFNBQVosR0FBd0JDLGdCQUFnQmpCLFlBQVlDLFFBQTVCLENBQXhCOztBQUVBLG9CQUFJcUIsVUFBYXRCLFlBQVlDLFFBQXpCLFdBQXVDRCxZQUFZUyxZQUFuRCxTQUFtRVQsWUFBWVUsZUFBbkY7QUFDQSxvQkFBSVYsWUFBWWEsT0FBWixJQUF1QmIsWUFBWWEsT0FBWixJQUF1QixNQUFsRCxFQUEwRDtBQUN0RFMsK0NBQXlCdEIsWUFBWWEsT0FBckM7QUFDSDs7QUFFRCxvQkFBSWIsWUFBWWMsY0FBWixJQUE4QmQsWUFBWWMsY0FBWixJQUE4QixNQUFoRSxFQUF3RTtBQUNwRVEsc0RBQWdDdEIsWUFBWWMsY0FBNUM7QUFDSDs7QUFFRGQsNEJBQVltQixXQUFaLEdBQTBCRyxPQUExQjtBQUNIO0FBQ0o7O0FBRUQsaUJBQVNMLGVBQVQsQ0FBeUJoQixRQUF6QixFQUFtQztBQUMvQixtQkFBT0EsU0FBU0csS0FBVCxDQUFlLEdBQWYsRUFBb0JtQixHQUFwQixFQUFQO0FBQ0g7O0FBRUQsWUFBSUMsVUFBVTtBQUNWekIscUNBQXlCQTtBQURmLFNBQWQ7O0FBSUEsZUFBT3lCLE9BQVA7QUFDSDs7QUFFRDFCLFlBQVEyQixPQUFSLEdBQWtCLEVBQWxCOztBQUVBN0IsWUFBUThCLE1BQVIsQ0FBZSw0QkFBZixFQUE2QyxDQUFDLElBQUQsQ0FBN0MsRUFDS0YsT0FETCxDQUNhLG1CQURiLEVBQ2tDMUIsT0FEbEM7QUFFSCxDQWhFQSxFQWdFQ0gsTUFoRUQsRUFnRVNBLE9BQU9DLE9BaEVoQixFQWdFeUJELE9BQU9nQyxNQWhFaEMsQ0FBRCIsImZpbGUiOiI4NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCAkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gU2VydmljZSgpIHtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcGFyc2VUaGVNZXNzYWdlVHlwZURhdGEobWVzc2FnZVR5cGUpIHtcclxuICAgICAgICAgICAgaWYgKCFtZXNzYWdlVHlwZS50eXBlTmFtZSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIGlmIChtZXNzYWdlVHlwZS50eXBlTmFtZS5pbmRleE9mKCc7JykgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZVR5cGVIaWVyYXJjaHkgPSBtZXNzYWdlVHlwZS50eXBlTmFtZS5zcGxpdCgnOycpO1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGVIaWVyYXJjaHkgPSBtZXNzYWdlVHlwZUhpZXJhcmNoeS5tYXAoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgb2JqID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlZ21lbnRzID0gaXRlbS5zcGxpdCgnLCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai50eXBlTmFtZSA9IHNlZ21lbnRzWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai5hc3NlbWJseU5hbWUgPSBzZWdtZW50c1sxXTtcclxuICAgICAgICAgICAgICAgICAgICBvYmouYXNzZW1ibHlWZXJzaW9uID0gc2VnbWVudHNbMl0uc3Vic3RyaW5nKHNlZ21lbnRzWzJdLmluZGV4T2YoJz0nKSArIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghc2VnbWVudHNbNF0uZW5kc1dpdGgoJz1udWxsJykpIHsgLy9TQyBtb25pdG9yaW5nIGZpbGxzIGN1bHR1cmUgb25seSBpZiBQdWJsaWNLZXlUb2tlbiBpcyBmaWxsZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2JqLmN1bHR1cmUgPSBzZWdtZW50c1szXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2JqLnB1YmxpY0tleVRva2VuID0gc2VnbWVudHNbNF07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvYmo7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlLm1lc3NhZ2VUeXBlSGllcmFyY2h5ID0gbWVzc2FnZVR5cGVIaWVyYXJjaHk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS50eXBlTmFtZSA9XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVR5cGVIaWVyYXJjaHkubWFwKGl0ZW0gPT4gaXRlbS50eXBlTmFtZSkuam9pbihcIiwgXCIpO1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGUuc2hvcnROYW1lID0gbWVzc2FnZVR5cGVIaWVyYXJjaHkubWFwKGl0ZW0gPT4gc2hvcnRlblR5cGVOYW1lKGl0ZW0udHlwZU5hbWUpKS5qb2luKFwiLCBcIik7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS5jb250YWluc1R5cGVIaWVyYXJjaHkgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGUudG9vbHRpcFRleHQgPSBtZXNzYWdlVHlwZUhpZXJhcmNoeS5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gKHN1bSA/IGAke3N1bX08YnI+IGAgOiAnJykgK1xyXG4gICAgICAgICAgICAgICAgICAgIGAke2l0ZW0udHlwZU5hbWV9IHwke2l0ZW0uYXNzZW1ibHlOYW1lfS0ke2l0ZW0uYXNzZW1ibHlWZXJzaW9ufWAgKyAoaXRlbS5jdWx0dXJlID8gYCB8JHtpdGVtLmN1bHR1cmV9YCA6ICcnKSArIChpdGVtLnB1YmxpY0tleVRva2VuID8gYCB8JHtpdGVtLnB1YmxpY0tleVRva2VufWAgOiAnJyksXHJcbiAgICAgICAgICAgICAgICAgICAgJycpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy9HZXQgdGhlIG5hbWUgd2l0aG91dCB0aGUgbmFtZXNwYWNlXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS5zaG9ydE5hbWUgPSBzaG9ydGVuVHlwZU5hbWUobWVzc2FnZVR5cGUudHlwZU5hbWUpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciB0b29sdGlwID0gYCR7bWVzc2FnZVR5cGUudHlwZU5hbWV9IHwgJHttZXNzYWdlVHlwZS5hc3NlbWJseU5hbWV9LSR7bWVzc2FnZVR5cGUuYXNzZW1ibHlWZXJzaW9ufWA7XHJcbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZVR5cGUuY3VsdHVyZSAmJiBtZXNzYWdlVHlwZS5jdWx0dXJlICE9ICdudWxsJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXAgKz0gYCB8IEN1bHR1cmU9JHttZXNzYWdlVHlwZS5jdWx0dXJlfWA7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VUeXBlLnB1YmxpY0tleVRva2VuICYmIG1lc3NhZ2VUeXBlLnB1YmxpY0tleVRva2VuICE9ICdudWxsJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXAgKz0gYCB8IFB1YmxpY0tleVRva2VuPSR7bWVzc2FnZVR5cGUucHVibGljS2V5VG9rZW59YDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS50b29sdGlwVGV4dCA9IHRvb2x0aXA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3J0ZW5UeXBlTmFtZSh0eXBlTmFtZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHlwZU5hbWUuc3BsaXQoJy4nKS5wb3AoKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICB2YXIgc2VydmljZSA9IHtcclxuICAgICAgICAgICAgcGFyc2VUaGVNZXNzYWdlVHlwZURhdGE6IHBhcnNlVGhlTWVzc2FnZVR5cGVEYXRhXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHNlcnZpY2U7XHJcbiAgICB9XHJcblxyXG4gICAgU2VydmljZS4kaW5qZWN0ID0gW107XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3NlcnZpY2VzLm1lc3NhZ2VUeXBlUGFyc2VyJywgWydzYyddKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdtZXNzYWdlVHlwZVBhcnNlcicsIFNlcnZpY2UpO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIsIHdpbmRvdy5qUXVlcnkpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///84\n")},85:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function controller($scope, $routeParams, $location, $window, toastService, serviceControlService, monitoringService, historyPeriodsService, $filter, smallGraphsMinimumYAxis, largeGraphsMinimumYAxis, connectivityNotifier, messageTypeParser) {\n\n        $scope.endpointName = $routeParams.endpointName;\n        $scope.showInstancesBreakdown = $routeParams.tab === 'instancesBreakdown';\n        $scope.loading = true;\n        $scope.loadedSuccessfully = false;\n        $scope.largeGraphsMinimumYAxis = largeGraphsMinimumYAxis;\n        $scope.smallGraphsMinimumYAxis = smallGraphsMinimumYAxis;\n\n        var subscription;\n\n        $scope.periods = historyPeriodsService.getAllPeriods();\n        $scope.selectedPeriod = historyPeriodsService.getDefaultPeriod();\n\n        $scope.selectPeriod = function (period) {\n            $scope.selectedPeriod = period;\n            historyPeriodsService.saveSelectedPeriod(period);\n            updateUI();\n        };\n\n        monitoringService.isRemovingEndpointEnabled().then(function (enabled) {\n            $scope.isRemovingEndpointEnabled = enabled;\n        });\n\n        function mergeIn(destination, source, propertiesToSkip) {\n            for (var propName in source) {\n                if (Object.prototype.hasOwnProperty.call(source, propName)) {\n                    if (!propertiesToSkip || !propertiesToSkip.includes(propName)) {\n                        destination[propName] = source[propName];\n                    }\n                }\n            }\n        }\n\n        $scope.buildUrl = function (selectedPeriodValue, showInstacesBreakdown, breakdownPageNo) {\n\n            var breakdownTabName = showInstacesBreakdown ? 'instancesBreakdown' : 'messageTypeBreakdown';\n\n            return '#/monitoring/endpoint/' + $scope.endpointName + '?historyPeriod=' + selectedPeriodValue + '&tab=' + breakdownTabName + '&pageNo=' + breakdownPageNo;\n        };\n\n        $scope.updateUrl = function () {\n\n            var updatedUrl = $scope.buildUrl($scope.selectedPeriod.value, $scope.showInstancesBreakdown, $scope.endpoint.messageTypesPage);\n\n            $window.location.hash = updatedUrl;\n        };\n\n        $scope.showInstancesBreakdownTab = function (isVisible) {\n            $scope.showInstancesBreakdown = isVisible;\n\n            $scope.endpoint.refreshMessageTypes();\n        };\n\n        $scope.removeEndpoint = function (endpointName, instance) {\n            instance.busy = true;\n            monitoringService.removeEndpointInstance(endpointName, instance.id).then(function () {\n                $scope.endpoint.instances.splice($scope.endpoint.instances.indexOf(instance), 1);\n\n                if ($scope.endpoint.instances.length === 0) {\n                    $window.location.hash = '#/monitoring';\n                }\n            }, function () {\n                instance.busy = false;\n            });\n        };\n\n        $scope.endpoint = {\n            messageTypesPage: !$scope.showInstancesBreakdown ? $routeParams.pageNo : 1,\n            messageTypesTotalItems: 0,\n            messageTypesItemsPerPage: 10,\n            messageTypesAvailable: false,\n            messageTypesUpdatedSet: [],\n            refreshMessageTypes: function refreshMessageTypes() {\n                if ($scope.endpoint.messageTypesAvailable) {\n                    $scope.endpoint.messageTypesAvailable = false;\n\n                    $scope.endpoint.messageTypes = $scope.endpoint.messageTypesUpdatedSet;\n                    $scope.endpoint.messageTypesUpdatedSet = null;\n\n                    processMessageTypes();\n                }\n            }\n        };\n\n        function processMessageTypes() {\n\n            $scope.endpoint.messageTypesTotalItems = $scope.endpoint.messageTypes.length;\n\n            $scope.endpoint.messageTypes.forEach(function (messageType) {\n                fillDisplayValues(messageType);\n                messageTypeParser.parseTheMessageTypeData(messageType);\n            });\n        }\n\n        function updateUI() {\n            if (subscription) {\n                subscription.dispose();\n            }\n\n            var selectedPeriod = $scope.selectedPeriod;\n\n            subscription = monitoringService.createEndpointDetailsSource($routeParams.endpointName, selectedPeriod.value, selectedPeriod.refreshInterval).subscribe(function (endpoint) {\n\n                $scope.loading = false;\n\n                if (endpoint.error) {\n                    connectivityNotifier.reportFailedConnection();\n                    if ($scope.endpoint && $scope.endpoint.instances) {\n                        $scope.endpoint.instances.forEach(function (item) {\n                            return item.isScMonitoringDisconnected = true;\n                        });\n                    }\n\n                    $scope.endpoint.isScMonitoringDisconnected = true;\n                } else {\n\n                    if ($scope.endpoint.messageTypesTotalItems > 0 && $scope.endpoint.messageTypesTotalItems !== endpoint.messageTypes.length) {\n\n                        mergeIn($scope.endpoint, endpoint, ['messageTypes']);\n\n                        $scope.endpoint.messageTypesAvailable = true;\n                        $scope.endpoint.messageTypesUpdatedSet = endpoint.messageTypes;\n                    } else {\n                        mergeIn($scope.endpoint, endpoint);\n                    }\n\n                    connectivityNotifier.reportSuccessfulConnection();\n\n                    $scope.endpoint.instances.sort(function (first, second) {\n                        if (first.id < second.id) {\n                            return -1;\n                        }\n\n                        if (first.id > second.id) {\n                            return 1;\n                        }\n\n                        return 0;\n                    });\n\n                    processMessageTypes();\n\n                    $scope.endpoint.isStale = true;\n                    $scope.endpoint.isScMonitoringDisconnected = false;\n\n                    $scope.endpoint.instances.forEach(function (instance) {\n                        fillDisplayValues(instance);\n                        serviceControlService.getExceptionGroupsForEndpointInstance(instance.id).then(function (result) {\n                            if (result.data.length > 0) {\n                                instance.serviceControlId = result.data[0].id;\n                                instance.errorCount = result.data[0].count;\n                            }\n                        }, function (err) {\n                            // Warn user?\n                        });\n                        $scope.endpoint.isStale = $scope.endpoint.isStale && instance.isStale;\n                    });\n\n                    $scope.loadedSuccessfully = true;\n                }\n\n                serviceControlService.getExceptionGroupsForLogicalEndpoint($scope.endpointName).then(function (result) {\n                    if (result.data.length > 0) {\n                        $scope.endpoint.serviceControlId = result.data[0].id;\n                        $scope.endpoint.errorCount = result.data[0].count;\n                    }\n                });\n            });\n        }\n\n        function fillDisplayValues(instance) {\n            $filter('graphduration')(instance.metrics.processingTime);\n            $filter('graphduration')(instance.metrics.criticalTime);\n            $filter('graphdecimal')(instance.metrics.throughput, 2);\n            $filter('graphdecimal')(instance.metrics.retries, 2);\n        }\n\n        $scope.$on(\"$destroy\", function handler() {\n            subscription.dispose();\n        });\n\n        updateUI();\n    }\n\n    controller.$inject = ['$scope', '$routeParams', '$location', '$window', 'toastService', 'serviceControlService', 'monitoringService', 'historyPeriodsService', '$filter', 'smallGraphsMinimumYAxis', 'largeGraphsMinimumYAxis', 'connectivityNotifier', 'messageTypeParser'];\n\n    angular.module('endpoint_details').controller('endpointDetailsCtrl', controller);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///85\n")},86:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function routeProvider($routeProvider) {\n        var template = __webpack_require__(87);\n\n        $routeProvider.when('/monitoring/endpoint/:endpointName', {\n            data: {\n                pageTitle: 'Endpoint Details'\n            },\n            template: template,\n            controller: 'endpointDetailsCtrl',\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        });\n    }\n\n    routeProvider.$inject = ['$routeProvider'];\n\n    angular.module('endpoint_details').config(routeProvider);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMucm91dGUuanM/N2E0OSJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwicm91dGVQcm92aWRlciIsIiRyb3V0ZVByb3ZpZGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwid2hlbiIsImRhdGEiLCJwYWdlVGl0bGUiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVsb2FkT25TZWFyY2giLCIkaW5qZWN0IiwibW9kdWxlIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBLGFBQVNDLGFBQVQsQ0FBdUJDLGNBQXZCLEVBQXVDO0FBQ25DLFlBQUlDLFdBQVdDLG1CQUFPQSxDQUFDLEVBQVIsQ0FBZjs7QUFFQUYsdUJBQWVHLElBQWYsQ0FBb0Isb0NBQXBCLEVBQTBEO0FBQ3REQyxrQkFBTTtBQUNGQywyQkFBVztBQURULGFBRGdEO0FBSXRESixzQkFBVUEsUUFKNEM7QUFLdERLLHdCQUFZLHFCQUwwQztBQU10REMsMEJBQWMsSUFOd0M7QUFPdERDLDRCQUFnQjtBQVBzQyxTQUExRDtBQVNIOztBQUVEVCxrQkFBY1UsT0FBZCxHQUF3QixDQUNwQixnQkFEb0IsQ0FBeEI7O0FBSUFYLFlBQVFZLE1BQVIsQ0FBZSxrQkFBZixFQUNLQyxNQURMLENBQ1laLGFBRFo7QUFFSCxDQXZCQSxFQXVCRUYsTUF2QkYsRUF1QlVBLE9BQU9DLE9BdkJqQixDQUFEIiwiZmlsZSI6Ijg2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBmdW5jdGlvbiByb3V0ZVByb3ZpZGVyKCRyb3V0ZVByb3ZpZGVyKSB7XHJcbiAgICAgICAgbGV0IHRlbXBsYXRlID0gcmVxdWlyZSgnLi8uLi92aWV3cy9lbmRwb2ludF9kZXRhaWxzLmh0bWwnKTtcclxuXHJcbiAgICAgICAgJHJvdXRlUHJvdmlkZXIud2hlbignL21vbml0b3JpbmcvZW5kcG9pbnQvOmVuZHBvaW50TmFtZScsIHtcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgcGFnZVRpdGxlOiAnRW5kcG9pbnQgRGV0YWlscydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnZW5kcG9pbnREZXRhaWxzQ3RybCcsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgcmVsb2FkT25TZWFyY2g6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcm91dGVQcm92aWRlci4kaW5qZWN0ID0gW1xyXG4gICAgICAgICckcm91dGVQcm92aWRlcidcclxuICAgIF07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2VuZHBvaW50X2RldGFpbHMnKVxyXG4gICAgICAgIC5jb25maWcocm91dGVQcm92aWRlcik7XHJcbn0gKHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///86\n")},87:function(module,exports){eval('module.exports = "<platform-trial-expired ng-if=isPlatformTrialExpired></platform-trial-expired> <platform-expired ng-if=isPlatformExpired></platform-expired> <upgrade-protection-expired ng-if=isInvalidDueToUpgradeProtectionExpired></upgrade-protection-expired> <div class=container ng-if=\\"!isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\"> <div class=sp-loader ng-if=loading></div> <div ng-include=\\"\'modules/monitoring/views/monitoring_not_available.html\'\\" ng-if=\\"!loading && !loadedSuccessfully\\"></div> <div class=\\"row monitoring-head\\" ng-if=loadedSuccessfully> <div class=\\"col-xs-9 no-side-padding list-section\\"> <h1 class=\\"righ-side-ellipsis col-lg-max-10\\" uib-tooltip={{endpointName}}> {{endpointName}} </h1> <div class=\\"endpoint-status col-xs-2\\"> <span ng-if=endpoint.isStale class=warning> <i class=\\"fa pa-endpoint-lost endpoint-details\\" uib-tooltip=\\"Unable to connect to endpoint\\"></i> </span> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\"fa pa-monitoring-lost endpoint-details\\" uib-tooltip=\\"Unable to connect to monitoring server\\"></i> </span> <a ng-if=endpoint.errorCount class=warning href=#/failed-messages/groups/{{endpoint.serviceControlId}}> <i class=\\"fa fa-envelope\\" uib-tooltip=\\"{{endpoint.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\"></i> <span class=\\"badge badge-important ng-binding\\">{{endpoint.errorCount | metricslargenumber}}</span> </a> </div> </div> <div class=\\"col-xs-3 no-side-padding toolbar-menus endpoint-details\\"> <ul class=\\"nav nav-pills period-selector endpoint-details\\"> <li role=presentation ng-repeat=\\"period in periods\\" ng-class=\\"(period.value == selectedPeriod.value ? \'active\' : \'notselected\')\\"> <a ng-click=selectPeriod(period) ng-href=\\"{{buildUrl(period.value, showInstancesBreakdown, showInstacesBreakdown ? 1 : endpoint.messageTypesPage)}}\\" uib-tooltip={{period.refreshIntervalText}}.>{{period.text}}</a> </li> </ul> </div> </div> </div> <div class=\\"container large-graphs\\" ng-if=\\"loadedSuccessfully && !isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\"> <div class=container> <div class=row> <div class=\\"col-xs-4 no-side-padding list-section graph-area graph-queue-length\\"> <large-graph ng-if=endpoint.metricDetails.metrics.queueLength first-data-series=endpoint.metricDetails.metrics.queueLength minimum-yaxis={{largeGraphsMinimumYAxis.queueLength}} plot-width=750 plot-height=200 first-series-color=#EA7E00 first-series-fill-color=#EADDCE class=\\"large-graph pull-left\\"> </large-graph> <div class=\\"col-xs-12 no-side-padding graph-values\\"> <div class=queue-length-values> <div class=row> <span class=metric-digest-header uib-tooltip=\\"Queue length: The number of messages waiting to be processed in the input queue(s) of the endpoint.\\"> Queue Length </span> </div> </div> <div class=\\"row metric-digest-value current\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.queueLength.latest | metricslargenumber:0}} <span ng-if=\\"endpoint.isStale == false || endpoint.isScMonitoringDisconnected == false\\" class=metric-digest-value-suffix>MSGS</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> <div class=\\"row metric-digest-value average\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.queueLength.average | metricslargenumber:0}} <span class=metric-digest-value-suffix>MSGS</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> <div class=\\"col-xs-4 no-side-padding list-section graph-area graph-message-retries-throughputs\\"> <large-graph ng-if=endpoint.metricDetails.metrics.throughput first-data-series=endpoint.metricDetails.metrics.throughput second-data-series=endpoint.metricDetails.metrics.retries minimum-yaxis={{largeGraphsMinimumYAxis.throughputRetries}} plot-width=750 plot-height=200 first-series-color=#176397 first-series-fill-color=#CADCE8 second-series-color=#CC1252 second-series-fill-color=#E9C4D1 class=\\"large-graph pull-left\\"> </large-graph> <div class=\\"col-xs-12 no-side-padding graph-values\\"> <div class=\\"col-xs-6 no-side-padding throughput-values\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\"> Throughput </span> </div> <div class=\\"row metric-digest-value current\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.throughput.latest | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> <div class=\\"row metric-digest-value average\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.throughput.average | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=metric-digest-value-suffix> AVG</span> </div> </div> <div class=\\"col-xs-6 no-side-padding scheduled-retries-rate-values\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\"Scheduled retries: The number of messages per second scheduled for retries (immediate or delayed).\\"> Scheduled retries </span> </div> <div class=\\"row metric-digest-value current\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.retries.latest | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> <div class=\\"row metric-digest-value average\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.retries.average | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> </div> <div class=\\"col-xs-4 no-side-padding list-section graph-area graph-critical-processing-times\\"> <large-graph ng-if=endpoint.metricDetails.metrics.processingTime first-data-series=endpoint.metricDetails.metrics.criticalTime second-data-series=endpoint.metricDetails.metrics.processingTime minimum-yaxis={{largeGraphsMinimumYAxis.processingCritical}} plot-width=750 plot-height=200 first-series-color=#2700CB first-series-fill-color=#C4BCE5 second-series-color=#258135 second-series-fill-color=#BEE6C5 is-duration-graph=true class=\\"large-graph pull-left\\"> </large-graph> <div class=\\"col-xs-12 no-side-padding graph-values\\"> <div class=\\"col-xs-6 no-side-padding processing-time-values\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\"> Processing Time </span> </div> <div class=\\"row metric-digest-value current\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.processingTime.latest | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.processingTime.latest | durationUnit}}</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> <div class=\\"row metric-digest-value average\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.processingTime.average | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.processingTime.average | durationUnit}}</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=metric-digest-value-suffix> AVG</span> </div> </div> <div class=\\"col-xs-6 no-side-padding critical-time-values\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\"> Critical Time </span> </div> <div class=\\"row metric-digest-value current\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.criticalTime.latest | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.criticalTime.latest | durationUnit}}</span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> <div class=\\"row metric-digest-value average\\"> <div ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\"> {{endpoint.digest.metrics.criticalTime.average | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.criticalTime.average | durationUnit}} </span> </div> <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> </div> </div> </div> </div> <div class=container ng-if=\\"loadedSuccessfully && !isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\"> <div class=tabs> <h5 ng-class=\\"{active: !showInstancesBreakdown}\\"> <a ng-click=showInstancesBreakdownTab(false) ng-href=\\"{{buildUrl(selectedPeriod.value, showInstancesBreakdown, endpoint.messageTypesPage)}}\\" class=ng-binding>Message Types ({{endpoint.messageTypes.length}})</a> </h5> <h5 ng-class=\\"{active: showInstancesBreakdown}\\"> <a ng-click=showInstancesBreakdownTab(true) ng-href=\\"{{buildUrl(selectedPeriod.value, showInstancesBreakdown, 1)}}\\" class=ng-binding>Instances ({{endpoint.instances.length}})</a> </h5> </div> <section ng-if=showInstancesBreakdown class=endpoint-instances> <div class=row> <div class=\\"col-xs-12 no-side-padding\\"> <div ng-show=loadedSuccessfully class=\\"row box box-no-click table-head-row\\"> <div class=\\"col-xs-4 col-xl-8\\"> <div class=\\"row box-header\\"> <div class=col-xs-12> Instance Name </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Scheduled retries: The number of messages per second scheduled for retries (immediate or delayed).\\"> Scheduled retries <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <no-data ng-show=\\"endpoint.instances.length == 0\\" message=\\"No messages processed in this period of time.\\"></no-data> <div class=row> <div class=\\"col-xs-12 no-side-padding\\"> <div class=\\"row box endpoint-row\\" ng-repeat=\\"instance in endpoint.instances\\"> <div class=\\"col-xs-12 no-side-padding\\"> <div class=row> <div class=\\"col-xs-4 col-xl-8 endpoint-name\\"> <div class=\\"row box-header\\"> <div class=\\"col-lg-max-9 no-side-padding lead righ-side-ellipsis\\" uib-tooltip={{instance.name}}> {{instance.name}} </div> <div class=\\"col-lg-4 no-side-padding endpoint-status\\"> <span class=warning ng-if=instance.isScMonitoringDisconnected> <i class=\\"fa pa-monitoring-lost endpoint-details\\" uib-tooltip=\\"Unable to connect to monitoring server\\"></i> </span> <span class=warning ng-if=instance.isStale> <i class=\\"fa pa-endpoint-lost endpoint-details\\" uib-tooltip=\\"Unable to connect to instance\\"></i> </span> <span class=warning ng-if=instance.errorCount> <a ng-if=instance.errorCount class=\\"warning btn\\" href=#/failed-messages/groups/{{instance.serviceControlId}}> <i class=\\"fa fa-envelope\\" uib-tooltip=\\"{{instance.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\"></i> <span class=\\"badge badge-important ng-binding\\">{{instance.errorCount | metricslargenumber}}</span> </a> </span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\"graph throughput pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\"> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\"\\" : instance.metrics.throughput.displayValue}} <strong ng-if=\\"instance.isStale || instance.isScMonitoringDisconnected\\">?</strong> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\"graph retries pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\"> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\"\\" : instance.metrics.retries.displayValue}} <strong ng-if=\\"instance.isStale || instance.isScMonitoringDisconnected\\">?</strong> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\"graph processing-time pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\" ng-class=instance.metrics.processingTime.displayValue.unit> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\"\\" : instance.metrics.processingTime.displayValue.value}} <strong ng-if=\\"instance.isStale || instance.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"instance.isStale == false && instance.isScMonitoringDisconnected == false\\" class=unit> {{instance.metrics.processingTime.displayValue.unit}} </span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\"graph critical-time pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\" ng-class=instance.metrics.criticalTime.displayValue.unit> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\"\\" : instance.metrics.criticalTime.displayValue.value}} <strong ng-if=\\"instance.isStale || instance.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"instance.isStale == false && instance.isScMonitoringDisconnected == false\\" class=unit> {{instance.metrics.criticalTime.displayValue.unit}} </span> </div> </div> </div> <a ng-if=isRemovingEndpointEnabled ng-show=instance.isStale class=remove-endpoint ng-click=\\"removeEndpoint(endpointName, instance)\\"><i class=\\"fa fa-trash\\" uib-tooltip=\\"Remove endpoint\\"></i></a> </div> </div> </div> </div> </div> </div> </div> </section> <section ng-if=!showInstancesBreakdown class=endpoint-message-types> <div class=row> <div class=\\"col-xs-12 no-side-padding\\"> <message-types-change-indicator refresh=endpoint.refreshMessageTypes message-types-available=endpoint.messageTypesAvailable></message-types-change-indicator> <div ng-show=loadedSuccessfully class=\\"row box box-no-click table-head-row\\"> <div class=\\"col-xs-4 col-xl-8\\"> <div class=\\"row box-header\\"> <div class=col-xs-12> Message type name </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Scheduled retries: The number of messages per second scheduled for retries (immediate or delayed).\\"> Scheduled retries <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=\\"col-xs-12 no-side-padding\\" uib-tooltip=\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <no-data ng-show=\\"endpoint.messageTypes.length == 0\\" message=\\"No messages processed in this period of time.\\"></no-data> <div class=row> <div class=\\"col-xs-12 no-side-padding\\"> <div class=\\"row box endpoint-row\\" ng-repeat=\\"messageType in endpoint.messageTypes | orderBy: \'typeName\' | limitTo: endpoint.messageTypesItemsPerPage : (endpoint.messageTypesPage-1) * endpoint.messageTypesItemsPerPage\\"> <div class=\\"col-xs-12 no-side-padding\\"> <div class=row> <div class=\\"col-xs-4 col-xl-8 endpoint-name\\" uib-tooltip-html=messageType.tooltipText> <div class=\\"row box-header\\"> <div class=\\"col-lg-max-9 no-side-padding lead message-type-label righ-side-ellipsis\\"> <div class=lead> {{messageType.shortName ? messageType.shortName : \'Unknown\'}} </div> </div> <div class=\\"col-lg-4 no-side-padding endpoint-status message-type-status\\"> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\"fa pa-monitoring-lost endpoint-details\\" uib-tooltip=\\"Unable to connect to monitoring server\\"></i> </span> </div> </div> <div class=\\"row message-type-properties\\"> <div ng-show=\\"{{messageType.typeName && messageType.typeName != \'null\' && !messageType.containsTypeHierarchy}}\\" class=message-type-part> {{messageType.assemblyName + \'-\' + messageType.assemblyVersion}} </div> <div ng-show=\\"{{messageType.typeName && messageType.typeName != \'null\' && messageType.containsTypeHierarchy}}\\" class=message-type-part ng-repeat=\\"type in messageType.messageTypeHierarchy\\"> {{type.assemblyName + \'-\' + type.assemblyVersion}} </div> <div ng-show=\\"{{messageType.culture && messageType.culture != \'null\'}}\\" class=message-type-part>{{\'Culture=\' + messageType.culture}}</div> <div ng-show=\\"{{messageType.publicKeyToken && messageType.publicKeyToken != \'null\'}}\\" class=message-type-part>{{\'PublicKeyToken=\' + messageType.publicKeyToken}}</div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\"graph throughput pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\"\\" : messageType.metrics.throughput.displayValue}} <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\"graph retries pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\"\\" : messageType.metrics.retries.displayValue}} <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\"graph processing-time pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\" ng-class=messageType.metrics.processingTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\"\\" : messageType.metrics.processingTime.displayValue.value}} <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=unit> {{messageType.metrics.processingTime.displayValue.unit}} </span> </div> </div> </div> <div class=\\"col-xs-2 col-xl-1 no-side-padding\\"> <div class=\\"row box-header\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\"graph critical-time pull-left\\"></graph> </div> <div class=\\"no-side-padding sparkline-value\\" ng-class=messageType.metrics.criticalTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\"\\" : messageType.metrics.criticalTime.displayValue.value}} <strong ng-if=\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\">?</strong> <span ng-if=\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\" class=unit> {{messageType.metrics.criticalTime.displayValue.unit}} </span> </div> </div> </div> </div> </div> </div> </div> </div> <div class=\\"row list-pagination\\"> <ul uib-pagination ng-show=\\"endpoint.messageTypesTotalItems >  endpoint.messageTypesItemsPerPage\\" total-items=endpoint.messageTypesTotalItems ng-model=endpoint.messageTypesPage items-per-page=endpoint.messageTypesItemsPerPage max-size=10 boundary-link-numbers=true ng-change=updateUrl()></ul> </div> </div> </div> </section> </div>";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///87\n')},88:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.duration', []).filter('duration', ['formatter', function (formatter) {\n        return function (input) {\n            var time = formatter.formatTime(input);\n            return time.value + ' ' + time.unit;\n        };\n    }]).filter('durationValue', ['formatter', function (formatter) {\n        return function (input) {\n            return formatter.formatTime(input).value;\n        };\n    }]).filter('durationUnit', ['formatter', function (formatter) {\n        return function (input) {\n            return formatter.formatTime(input).unit;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5kdXJhdGlvbi5qcz82ZDYwIl0sIm5hbWVzIjpbIndpbmRvdyIsImFuZ3VsYXIiLCJtb2R1bGUiLCJmaWx0ZXIiLCJmb3JtYXR0ZXIiLCJpbnB1dCIsInRpbWUiLCJmb3JtYXRUaW1lIiwidmFsdWUiLCJ1bml0Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBQSxZQUFRQyxNQUFSLENBQWUsd0JBQWYsRUFBeUMsRUFBekMsRUFDS0MsTUFETCxDQUNZLFVBRFosRUFDd0IsQ0FBQyxXQUFELEVBQWMsVUFBVUMsU0FBVixFQUFxQjtBQUNuRCxlQUFPLFVBQVVDLEtBQVYsRUFBaUI7QUFDcEIsZ0JBQUlDLE9BQU9GLFVBQVVHLFVBQVYsQ0FBcUJGLEtBQXJCLENBQVg7QUFDQSxtQkFBVUMsS0FBS0UsS0FBZixTQUF3QkYsS0FBS0csSUFBN0I7QUFDSCxTQUhEO0FBSUgsS0FMbUIsQ0FEeEIsRUFPS04sTUFQTCxDQU9ZLGVBUFosRUFPNkIsQ0FBQyxXQUFELEVBQWMsVUFBVUMsU0FBVixFQUFxQjtBQUN4RCxlQUFPLFVBQVVDLEtBQVYsRUFBaUI7QUFDcEIsbUJBQU9ELFVBQVVHLFVBQVYsQ0FBcUJGLEtBQXJCLEVBQTRCRyxLQUFuQztBQUNILFNBRkQ7QUFHSCxLQUp3QixDQVA3QixFQVlLTCxNQVpMLENBWVksY0FaWixFQVk0QixDQUFDLFdBQUQsRUFBYyxVQUFVQyxTQUFWLEVBQXFCO0FBQ3ZELGVBQU8sVUFBVUMsS0FBVixFQUFpQjtBQUNwQixtQkFBT0QsVUFBVUcsVUFBVixDQUFxQkYsS0FBckIsRUFBNEJJLElBQW5DO0FBQ0gsU0FGRDtBQUdILEtBSnVCLENBWjVCO0FBaUJILENBcEJBLEVBb0JDVCxNQXBCRCxFQW9CU0EsT0FBT0MsT0FwQmhCLENBQUQiLCJmaWxlIjoiODguanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhcikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCd1aS5wYXJ0aWN1bGFyLmR1cmF0aW9uJywgW10pXHJcbiAgICAgICAgLmZpbHRlcignZHVyYXRpb24nLCBbJ2Zvcm1hdHRlcicsIGZ1bmN0aW9uIChmb3JtYXR0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRpbWUgPSBmb3JtYXR0ZXIuZm9ybWF0VGltZShpbnB1dCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7dGltZS52YWx1ZX0gJHt0aW1lLnVuaXR9YDtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XSlcclxuICAgICAgICAuZmlsdGVyKCdkdXJhdGlvblZhbHVlJywgWydmb3JtYXR0ZXInLCBmdW5jdGlvbiAoZm9ybWF0dGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0VGltZShpbnB1dCkudmFsdWU7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pXHJcbiAgICAgICAgLmZpbHRlcignZHVyYXRpb25Vbml0JywgWydmb3JtYXR0ZXInLCBmdW5jdGlvbiAoZm9ybWF0dGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0VGltZShpbnB1dCkudW5pdDtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///88\n")},89:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, d3) {\n    'use strict';\n\n    function drawDataSeries(chart, data, color, fillColor, scaleX, scaleY) {\n\n        var area = d3.area().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d) {\n            return scaleY(d);\n        }).y1(function () {\n            return scaleY(0);\n        }).curve(d3.curveLinear);\n\n        var line = d3.line().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d, i) {\n            return scaleY(d);\n        }).curve(d3.curveLinear);\n\n        var group = chart.append('g').attr('class', 'dataSeries');\n\n        group.append('path').datum(data.points).attr('d', area).attr('fill', fillColor).attr('opacity', 0.8).attr('stroke', fillColor);\n\n        group.append('path').datum(data.points).attr('d', line).attr('stroke', color).attr('stroke-width', 2.75).attr('fill', 'none');\n    }\n\n    function drawAverageLine(chart, data, color, fillColor, scaleX, scaleY) {\n\n        var line = d3.line().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d, i) {\n            return scaleY(d);\n        }).curve(d3.curveLinear);\n\n        var group = chart.append('g').attr('class', 'dataAverage');\n\n        group.append('path').datum(Array(data.points.length).fill(data.average)).attr('d', line).attr('stroke', color).attr('stroke-width', 1.5).attr('opacity', 0.5).attr('stroke-dasharray', '10,10');\n    }\n\n    function padToWholeValue(value) {\n        var emptyDataSetyAxisMax = 10;\n\n        if (!value) {\n            return emptyDataSetyAxisMax;\n        }\n\n        var upperBound = 10;\n\n        while (value > upperBound) {\n            upperBound *= 10;\n        }\n\n        upperBound /= 10;\n\n        return Math.floor(value / upperBound) * upperBound + upperBound;\n    }\n\n    angular.module('ui.particular.largeGraph', []).directive('largeGraph', function (formatter) {\n        return {\n            restrict: 'E',\n            scope: {\n                firstDataSeries: '=firstDataSeries',\n                secondDataSeries: '=secondDataSeries',\n                isDurationGraph: '=isDurationGraph',\n                minimumYaxis: '@',\n                width: '=plotWidth',\n                height: '=plotHeight'\n            },\n            template: '<svg></svg>',\n            link: function link(scope, element, attrs) {\n                scope.$watch('firstDataSeries', function () {\n\n                    var svg = element.find('svg')[0];\n\n                    d3.select(svg).selectAll('*').remove();\n\n                    var topMargin = 10;\n                    var bottomMargin = 5;\n                    var leftMargin = 60;\n\n                    var chart = d3.select(svg).attr('width', scope.width).attr('height', scope.height);\n\n                    var width = svg.clientWidth;\n                    var height = svg.clientHeight;\n\n                    //HINT: This is workaround for Firefox\n                    if (width === 0) {\n                        var box = svg.getBoundingClientRect();\n\n                        width = box.right - box.left;\n                        height = box.bottom - box.top;\n                    }\n\n                    var firstSeries = scope.firstDataSeries;\n                    var secondSeries = scope.secondDataSeries;\n\n                    var amountOfValues = Math.max(firstSeries.points.length, secondSeries ? secondSeries.points.length : 0) || 10;\n                    if (firstSeries.points.length === 0) {\n                        firstSeries.points = new Array(amountOfValues).fill(0);\n                    }\n                    var scaleX = d3.scaleLinear().domain([0, amountOfValues - 1]).range([leftMargin, width]);\n\n                    chart.append('rect').attr('width', width - leftMargin).attr('height', height - topMargin - bottomMargin).attr('transform', 'translate(' + leftMargin + ',' + topMargin + ')').attr('fill', '#F2F6F7');\n\n                    var minimumYaxis = !isNaN(scope.minimumYaxis) ? Number(scope.minimumYaxis) : 10;\n                    var max = Math.max(firstSeries.average, firstSeries.points.length > 0 ? d3.max(firstSeries.points) : 0, minimumYaxis);\n\n                    if (secondSeries && secondSeries.points.length > 0) {\n                        max = Math.max(max, secondSeries.average, d3.max(secondSeries.points));\n                    }\n\n                    max = padToWholeValue(max);\n\n                    var scaleY = d3.scaleLinear().domain([0, max]).range([height - bottomMargin, topMargin]);\n\n                    var yAxis = d3.axisLeft(scaleY).tickValues([0, max * 1 / 4, max * 1 / 2, max * 3 / 4, max]);\n\n                    if (scope.isDurationGraph) {\n                        yAxis = yAxis.tickFormat(function (v) {\n                            var formattedTime = formatter.formatTime(v);\n\n                            return formattedTime.value + '  ' + formattedTime.unit;\n                        });\n                    }\n\n                    chart.append('g').attr('class', 'y axis').attr('transform', 'translate(' + leftMargin + ', 0)').call(function (g) {\n                        g.call(yAxis);\n                        g.select('.domain').remove();\n                        g.selectAll('.tick line').attr('stroke', 'black').attr('stroke-width', '1.75').attr('opacity', 0.1).attr('x', 0).attr('x2', width - leftMargin);\n                        g.selectAll('.tick text').attr('x', -4).attr('fill', '#828282');\n                    });\n\n                    var drawSeries = function drawSeries(data, lineColor, fillColor) {\n                        drawDataSeries(chart, data, lineColor, fillColor, scaleX, scaleY);\n                    };\n\n                    var drawAverage = function drawAverage(data, lineColor, fillColor) {\n                        drawAverageLine(chart, data, lineColor, fillColor, scaleX, scaleY);\n                    };\n\n                    drawSeries(firstSeries, attrs.firstSeriesColor, attrs.firstSeriesFillColor);\n\n                    if (secondSeries) {\n                        drawSeries(secondSeries, attrs.secondSeriesColor, attrs.secondSeriesFillColor);\n                    }\n\n                    drawAverage(firstSeries, attrs.firstSeriesColor, attrs.firstSeriesFillColor);\n\n                    if (secondSeries) {\n                        drawAverage(secondSeries, attrs.secondSeriesColor, attrs.secondSeriesFillColor);\n                    }\n                });\n            }\n        };\n    });\n})(window, window.angular, window.d3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///89\n")},9:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, d3) {\n    'use strict';\n\n    angular.module('ui.particular.graph', []).directive('graph', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                plotData: '=',\n                formatter: '&',\n                minimumYaxis: '@'\n            },\n            template: '<svg></svg>',\n            link: function link(scope, element, attrs) {\n                scope.plotData = scope.plotData || { points: [], average: 0 };\n\n                scope.$watch('plotData', function () {\n                    var svg = element.find('svg')[0];\n\n                    var width = svg.clientWidth;\n                    var height = svg.clientHeight;\n\n                    //HINT: This is workaround for Firefox\n                    if (width === 0) {\n                        var box = svg.getBoundingClientRect();\n\n                        width = box.right - box.left;\n                        height = box.bottom - box.top;\n                    }\n\n                    var verticalMargin = 6;\n                    var horizontalMargin = 2;\n\n                    var points = scope.plotData.points;\n                    if (points.length === 0) {\n                        points = new Array(10).fill(0);\n                    }\n                    var average = scope.plotData.average || 0;\n                    var minimumYaxis = !isNaN(scope.minimumYaxis) ? Number(scope.minimumYaxis) : 10;\n                    var max = points && points.length ? Math.max(average * 1.5, d3.max(points), minimumYaxis) : 1;\n                    var numberOfPoints = points && points.length ? points.length : 2;\n\n                    var scaleY = d3.scaleLinear().domain([0, max]).range([height - verticalMargin, verticalMargin]);\n\n                    var scaleX = d3.scaleLinear().domain([0, numberOfPoints - 1]).range([horizontalMargin, width - horizontalMargin]);\n\n                    var area = d3.area().x(function (d, i) {\n                        return scaleX(i);\n                    }).y(function (d, i) {\n                        return scaleY(d);\n                    }).y1(function (d) {\n                        return scaleY(0);\n                    }).curve(d3.curveLinear);\n\n                    var line = d3.line().x(function (d, i) {\n                        return scaleX(i);\n                    }).y(function (d, i) {\n                        return scaleY(d);\n                    }).curve(d3.curveLinear);\n\n                    d3.select(svg).selectAll(\"*\").remove();\n\n                    var chart = d3.select(svg).attr('width', width).attr('height', height);\n\n                    chart.append('rect').attr('width', width - 2 * horizontalMargin).attr('height', height - 2 * verticalMargin).attr('transform', 'translate(' + horizontalMargin + ',' + verticalMargin + ')').attr('fill', '#F2F6F7');\n\n                    if (points) {\n                        chart.append('path').datum(points).attr('d', area).attr('class', 'graph-data-fill');\n\n                        chart.append('path').datum(points).attr('d', line).attr('class', 'graph-data-line');\n                    }\n\n                    chart.append('path').datum(Array(numberOfPoints).fill(average)).attr('d', line).attr('class', 'graph-avg-line');\n                });\n            }\n        };\n    });\n})(window, window.angular, window.d3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n")},90:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, $) {\n    'use strict';\n\n    angular.module('ui.particular.messageTypesChangeIndicator', []).directive('messageTypesChangeIndicator', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                refresh: '=',\n                messageTypesAvailable: '='\n            },\n            templateUrl: 'modules/monitoring/js/directives/ui.particular.messageTypesChangeIndicator.tpl.html',\n            link: function link(scope, element, attrs) {\n                $(window).on('load scroll', function () {\n                    if ($(this).scrollTop() > 510) {\n                        $('.endpoint-data-changed').addClass('sticky');\n                        $('.table-head-row').addClass('add-top-margin');\n                    } else {\n                        $('.endpoint-data-changed').removeClass('sticky');\n                        $('.table-head-row').removeClass('add-top-margin');\n                    }\n                });\n            }\n        };\n    });\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXNzYWdlVHlwZXNDaGFuZ2VJbmRpY2F0b3IuanM/YTQzYiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwiJCIsIm1vZHVsZSIsImRpcmVjdGl2ZSIsInJlc3RyaWN0Iiwic2NvcGUiLCJyZWZyZXNoIiwibWVzc2FnZVR5cGVzQXZhaWxhYmxlIiwidGVtcGxhdGVVcmwiLCJsaW5rIiwiZWxlbWVudCIsImF0dHJzIiwib24iLCJzY3JvbGxUb3AiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxDQUEzQixFQUE4QjtBQUMzQjs7QUFFQUQsWUFBUUUsTUFBUixDQUFlLDJDQUFmLEVBQTRELEVBQTVELEVBQ0tDLFNBREwsQ0FDZSw2QkFEZixFQUVRLFlBQVc7QUFDUCxlQUFPO0FBQ0hDLHNCQUFVLEdBRFA7QUFFSEMsbUJBQU87QUFDSEMseUJBQVMsR0FETjtBQUVIQyx1Q0FBdUI7QUFGcEIsYUFGSjtBQU1IQyx5QkFBYSxxRkFOVjtBQU9IQyxrQkFBTSxTQUFTQSxJQUFULENBQWNKLEtBQWQsRUFBcUJLLE9BQXJCLEVBQThCQyxLQUE5QixFQUFxQztBQUN2Q1Ysa0JBQUVGLE1BQUYsRUFBVWEsRUFBVixDQUFhLGFBQWIsRUFBNEIsWUFBWTtBQUNwQyx3QkFBSVgsRUFBRSxJQUFGLEVBQVFZLFNBQVIsS0FBc0IsR0FBMUIsRUFBK0I7QUFDM0JaLDBCQUFFLHdCQUFGLEVBQTRCYSxRQUE1QixDQUFxQyxRQUFyQztBQUNBYiwwQkFBRSxpQkFBRixFQUFxQmEsUUFBckIsQ0FBOEIsZ0JBQTlCO0FBQ0gscUJBSEQsTUFHTztBQUNIYiwwQkFBRSx3QkFBRixFQUE0QmMsV0FBNUIsQ0FBd0MsUUFBeEM7QUFDQWQsMEJBQUUsaUJBQUYsRUFBcUJjLFdBQXJCLENBQWlDLGdCQUFqQztBQUNIO0FBQ0osaUJBUkQ7QUFTSDtBQWpCRSxTQUFQO0FBbUJILEtBdEJUO0FBdUJILENBMUJBLEVBMEJDaEIsTUExQkQsRUEwQlNBLE9BQU9DLE9BMUJoQixFQTBCeUJELE9BQU9pQixNQTFCaEMsQ0FBRCIsImZpbGUiOiI5MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCAkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3VpLnBhcnRpY3VsYXIubWVzc2FnZVR5cGVzQ2hhbmdlSW5kaWNhdG9yJywgW10pXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgnbWVzc2FnZVR5cGVzQ2hhbmdlSW5kaWNhdG9yJyxcclxuICAgICAgICAgICAgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgICAgICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaDogJz0nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZXNBdmFpbGFibGU6ICc9J1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdtb2R1bGVzL21vbml0b3JpbmcvanMvZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1lc3NhZ2VUeXBlc0NoYW5nZUluZGljYXRvci50cGwuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgbGluazogZnVuY3Rpb24gbGluayhzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh3aW5kb3cpLm9uKCdsb2FkIHNjcm9sbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLnNjcm9sbFRvcCgpID4gNTEwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmVuZHBvaW50LWRhdGEtY2hhbmdlZCcpLmFkZENsYXNzKCdzdGlja3knKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcudGFibGUtaGVhZC1yb3cnKS5hZGRDbGFzcygnYWRkLXRvcC1tYXJnaW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmVuZHBvaW50LWRhdGEtY2hhbmdlZCcpLnJlbW92ZUNsYXNzKCdzdGlja3knKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcudGFibGUtaGVhZC1yb3cnKS5yZW1vdmVDbGFzcygnYWRkLXRvcC1tYXJnaW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhciwgd2luZG93LmpRdWVyeSkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///90\n")},91:function(module,exports,__webpack_require__){"use strict";eval("\n\n(function (window, angular, $, Rx) {\n    'use strict';\n\n    function Service(notifyService, monitoringService, $log, $rootScope) {\n        var disconnectedEndpointsUpdatedEvent = \"DisconnectedEndpointsUpdated\";\n\n        var notifier = notifyService();\n\n        var checkInterval;\n\n        var checkDisconnectedCount = function checkDisconnectedCount() {\n            monitoringService.getDisconnectedCount().then(function (result) {\n                notifier.notify(disconnectedEndpointsUpdatedEvent, result.data);\n            }, function (e) {\n                $log.debug('Error while getting disconnected endpoints count from monitoring:' + e);\n                clearInterval(checkInterval); //Stop checking, probably an old version of Monitoring\n            });\n        };\n\n        var isConnected = false;\n\n        var startService = function startService() {\n            notifier.subscribe($rootScope, function (event, data) {\n                if (data.isMonitoringConnected && isConnected == false) {\n                    checkDisconnectedCount();\n                    checkInterval = setInterval(checkDisconnectedCount, 20000);\n                    isConnected = true;\n                } else if (!data.isMonitoringConnected && isConnected) {\n                    isConnected = false;\n                    clearInterval(checkInterval);\n                }\n            }, \"MonitoringConnectionStatusChanged\");\n        };\n\n        var service = {\n            updatedEvent: disconnectedEndpointsUpdatedEvent,\n            startService: startService\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['notifyService', 'monitoringService', '$log', '$rootScope'];\n\n    angular.module('services.disconnectedEndpointMonitor', ['sc']).service('disconnectedEndpointMonitor', Service);\n})(window, window.angular, window.jQuery, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmRpc2Nvbm5lY3RlZEVuZHBvaW50TW9uaXRvci5qcz9jMTllIl0sIm5hbWVzIjpbIndpbmRvdyIsImFuZ3VsYXIiLCIkIiwiUngiLCJTZXJ2aWNlIiwibm90aWZ5U2VydmljZSIsIm1vbml0b3JpbmdTZXJ2aWNlIiwiJGxvZyIsIiRyb290U2NvcGUiLCJkaXNjb25uZWN0ZWRFbmRwb2ludHNVcGRhdGVkRXZlbnQiLCJub3RpZmllciIsImNoZWNrSW50ZXJ2YWwiLCJjaGVja0Rpc2Nvbm5lY3RlZENvdW50IiwiZ2V0RGlzY29ubmVjdGVkQ291bnQiLCJ0aGVuIiwibm90aWZ5IiwicmVzdWx0IiwiZGF0YSIsImRlYnVnIiwiZSIsImNsZWFySW50ZXJ2YWwiLCJpc0Nvbm5lY3RlZCIsInN0YXJ0U2VydmljZSIsInN1YnNjcmliZSIsImV2ZW50IiwiaXNNb25pdG9yaW5nQ29ubmVjdGVkIiwic2V0SW50ZXJ2YWwiLCJzZXJ2aWNlIiwidXBkYXRlZEV2ZW50IiwiJGluamVjdCIsIm1vZHVsZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQyxXQUFVQSxNQUFWLEVBQWtCQyxPQUFsQixFQUEyQkMsQ0FBM0IsRUFBOEJDLEVBQTlCLEVBQWtDO0FBQy9COztBQUVBLGFBQVNDLE9BQVQsQ0FBaUJDLGFBQWpCLEVBQWdDQyxpQkFBaEMsRUFBbURDLElBQW5ELEVBQXlEQyxVQUF6RCxFQUFxRTtBQUNqRSxZQUFJQyxvQ0FBb0MsOEJBQXhDOztBQUVBLFlBQUlDLFdBQVdMLGVBQWY7O0FBRUEsWUFBSU0sYUFBSjs7QUFFQSxZQUFJQyx5QkFBeUIsU0FBekJBLHNCQUF5QixHQUFZO0FBQ3JDTiw4QkFBa0JPLG9CQUFsQixHQUF5Q0MsSUFBekMsQ0FBOEMsa0JBQVU7QUFDcERKLHlCQUFTSyxNQUFULENBQWdCTixpQ0FBaEIsRUFBbURPLE9BQU9DLElBQTFEO0FBQ0gsYUFGRCxFQUVHLGFBQUs7QUFDSlYscUJBQUtXLEtBQUwsQ0FBVyxzRUFBc0VDLENBQWpGO0FBQ0FDLDhCQUFjVCxhQUFkLEVBRkksQ0FFMEI7QUFDakMsYUFMRDtBQU1ILFNBUEQ7O0FBU0EsWUFBSVUsY0FBYyxLQUFsQjs7QUFFQSxZQUFJQyxlQUFlLFNBQWZBLFlBQWUsR0FBWTtBQUMzQloscUJBQVNhLFNBQVQsQ0FBbUJmLFVBQW5CLEVBQStCLFVBQUNnQixLQUFELEVBQVFQLElBQVIsRUFBaUI7QUFDNUMsb0JBQUlBLEtBQUtRLHFCQUFMLElBQThCSixlQUFlLEtBQWpELEVBQXdEO0FBQ3BEVDtBQUNBRCxvQ0FBZ0JlLFlBQVlkLHNCQUFaLEVBQW9DLEtBQXBDLENBQWhCO0FBQ0FTLGtDQUFjLElBQWQ7QUFDSCxpQkFKRCxNQUlPLElBQUksQ0FBQ0osS0FBS1EscUJBQU4sSUFBK0JKLFdBQW5DLEVBQWdEO0FBQ25EQSxrQ0FBYyxLQUFkO0FBQ0FELGtDQUFjVCxhQUFkO0FBQ0g7QUFDSixhQVRELEVBU0csbUNBVEg7QUFVSCxTQVhEOztBQWFBLFlBQUlnQixVQUFVO0FBQ1ZDLDBCQUFjbkIsaUNBREo7QUFFVmEsMEJBQWNBO0FBRkosU0FBZDs7QUFLQSxlQUFPSyxPQUFQO0FBQ0g7O0FBRUR2QixZQUFReUIsT0FBUixHQUFrQixDQUFDLGVBQUQsRUFBa0IsbUJBQWxCLEVBQXVDLE1BQXZDLEVBQStDLFlBQS9DLENBQWxCOztBQUVBNUIsWUFBUTZCLE1BQVIsQ0FBZSxzQ0FBZixFQUF1RCxDQUFDLElBQUQsQ0FBdkQsRUFDS0gsT0FETCxDQUNhLDZCQURiLEVBQzRDdkIsT0FENUM7QUFFSCxDQTlDQSxFQThDQ0osTUE5Q0QsRUE4Q1NBLE9BQU9DLE9BOUNoQixFQThDeUJELE9BQU8rQixNQTlDaEMsRUE4Q3dDL0IsT0FBT0csRUE5Qy9DLENBQUQiLCJmaWxlIjoiOTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgJCwgUngpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBmdW5jdGlvbiBTZXJ2aWNlKG5vdGlmeVNlcnZpY2UsIG1vbml0b3JpbmdTZXJ2aWNlLCAkbG9nLCAkcm9vdFNjb3BlKSB7XHJcbiAgICAgICAgdmFyIGRpc2Nvbm5lY3RlZEVuZHBvaW50c1VwZGF0ZWRFdmVudCA9IFwiRGlzY29ubmVjdGVkRW5kcG9pbnRzVXBkYXRlZFwiO1xyXG5cclxuICAgICAgICB2YXIgbm90aWZpZXIgPSBub3RpZnlTZXJ2aWNlKCk7XHJcblxyXG4gICAgICAgIHZhciBjaGVja0ludGVydmFsO1xyXG5cclxuICAgICAgICB2YXIgY2hlY2tEaXNjb25uZWN0ZWRDb3VudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbW9uaXRvcmluZ1NlcnZpY2UuZ2V0RGlzY29ubmVjdGVkQ291bnQoKS50aGVuKHJlc3VsdCA9PiB7XHJcbiAgICAgICAgICAgICAgICBub3RpZmllci5ub3RpZnkoZGlzY29ubmVjdGVkRW5kcG9pbnRzVXBkYXRlZEV2ZW50LCByZXN1bHQuZGF0YSk7XHJcbiAgICAgICAgICAgIH0sIGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgJGxvZy5kZWJ1ZygnRXJyb3Igd2hpbGUgZ2V0dGluZyBkaXNjb25uZWN0ZWQgZW5kcG9pbnRzIGNvdW50IGZyb20gbW9uaXRvcmluZzonICsgZSk7XHJcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGNoZWNrSW50ZXJ2YWwpOyAvL1N0b3AgY2hlY2tpbmcsIHByb2JhYmx5IGFuIG9sZCB2ZXJzaW9uIG9mIE1vbml0b3JpbmdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGlzQ29ubmVjdGVkID0gZmFsc2U7XHJcblxyXG4gICAgICAgIHZhciBzdGFydFNlcnZpY2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIG5vdGlmaWVyLnN1YnNjcmliZSgkcm9vdFNjb3BlLCAoZXZlbnQsIGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmlzTW9uaXRvcmluZ0Nvbm5lY3RlZCAmJiBpc0Nvbm5lY3RlZCA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoZWNrRGlzY29ubmVjdGVkQ291bnQoKTtcclxuICAgICAgICAgICAgICAgICAgICBjaGVja0ludGVydmFsID0gc2V0SW50ZXJ2YWwoY2hlY2tEaXNjb25uZWN0ZWRDb3VudCwgMjAwMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWRhdGEuaXNNb25pdG9yaW5nQ29ubmVjdGVkICYmIGlzQ29ubmVjdGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGNoZWNrSW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCBcIk1vbml0b3JpbmdDb25uZWN0aW9uU3RhdHVzQ2hhbmdlZFwiKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgc2VydmljZSA9IHtcclxuICAgICAgICAgICAgdXBkYXRlZEV2ZW50OiBkaXNjb25uZWN0ZWRFbmRwb2ludHNVcGRhdGVkRXZlbnQsXHJcbiAgICAgICAgICAgIHN0YXJ0U2VydmljZTogc3RhcnRTZXJ2aWNlXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHNlcnZpY2U7XHJcbiAgICB9XHJcblxyXG4gICAgU2VydmljZS4kaW5qZWN0ID0gWydub3RpZnlTZXJ2aWNlJywgJ21vbml0b3JpbmdTZXJ2aWNlJywgJyRsb2cnLCAnJHJvb3RTY29wZSddO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcy5kaXNjb25uZWN0ZWRFbmRwb2ludE1vbml0b3InLCBbJ3NjJ10pXHJcbiAgICAgICAgLnNlcnZpY2UoJ2Rpc2Nvbm5lY3RlZEVuZHBvaW50TW9uaXRvcicsIFNlcnZpY2UpO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIsIHdpbmRvdy5qUXVlcnksIHdpbmRvdy5SeCkpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///91\n")}});